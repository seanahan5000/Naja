***ENTRANCE-POINT-OF-HALLWAY-SUBROUTINE***
HALLWAY			LDX	#$01			;SET X AND Y FOR LEFT SIDE
				LDY	#$00
BEGIN			LDA	#MASK76			;MASK ALL BUT BITS 7 AND 6
				AND	FARLEFT,X		;DO AND OPERATION ON LEFT OR RIGHT
				STA	LEFTFLG,Y		;STORE IN LEFT OR RIGHT FLAG 
				STA	DUMMY			;STORE IN DUMMY AND DO A BIT OP
				BIT	DUMMY
				BMI	LFTRGHT			;IF NOT A SPECIAL OR OPENING THEN SKIP
				BVS	SPECHND			;IF SPECIAL, GOTO SPECIAL ROUTINE
				LDX	#$00			;HANDLER FOR OPENINGS 
				CPY	#$00			;ADJUST FOR FARLEFT OR FARRIGHT
				BEQ	NOCHNGE
				LDX	#$04
NOCHNGE			JSR	PASSAGE
				JMP	LFTRGHT
PASSAGE			LDA	#MASK76			;***BEGINNING OF PASSAGE SUBROUTINE***
				AND	FARLEFT,X		;MASK ALL BUT BITS 7 AND 6
				CLC
				ROL
				ROL
				ROL					;MOVE BITS 7 AND 6 TO 2 AND 1
				ORA	LEFTFLG,Y		;COMBINE WITH LEFT OR RIGHT FLAG
				STA	LEFTFLG,Y		;AND STORE
				AND	#MASK21
				CMP	#$01			;IS THE BRANCH PASSAGE A SPECIAL?
				BNE	PASSOUT			;NO, THEN LEAVE 
				LDA	#TOPMASK		;MASK ALL BUT TOP FOUR BITS
				AND	LEFTFLG,Y
				ORA	#SPLMASK		;SET FLAG FOR A SPECIAL
				STA	LEFTFLG,Y		;STORE FINISHED BYTE
PASSOUT			RTS					;***END OF PASSAGE SUBROUTINE***
SPECHND			LDA	#$00
				ORA	#SPHMASK		;FLAG IT AS A SPECIAL
				STA	LEFTFLG,Y
				LDX	#$00			;YES, THEN CHECK ADJACENT PASSAGE
				CPY	#$00			;FIRST SET UP X AND Y TO DO SO
				BEQ	CHNGENO
				LDX	#$04
CHNGENO			DB	$EA,$EA,$EA
LFTRGHT			CPY	#$01			;HAVE LEFT AND RIGHT BEEN CHECKED?
				BEQ	CNTRCHK			;YES, THEN LEAVE
				LDX	#$03
				LDY	#$01
				JMP	BEGIN			;NO, THEN CHECK RIGHT SIDE
CNTRCHK			LDX	BUFFPNT
				LDA	LEFTFLG	
				STA	BUFFER,X		;STORE LEFT FLAG
				INX
				LDA	RGHTFLG
				STA	BUFFER,X		;AND RIGHT FLAG IN BUFFER
				INX
				LDA	CENTER			;CHECK THE CENTER
				AND	#MASK76
				STA	DUMMY
				BIT	DUMMY
				BMI	BULGE			;IF A WALL OR DOOR THEN GOTO BULGE
				BVS	NONEXT			;IF NOT AN OPENING THEN KEEP GOING
				INC	BITDPTH
				STX	BUFFPNT			;STORE BUFFER POINTER
				JMP	END3
NONEXT			LDA	#$00	
				ORA	#SPHMASK		;SET SPECIAL FLAG AND STORE
				STA	DUMMY
BULGE			DEX
				DEX	
				LDA	BUFFER,X
				ORA	#BLGMASK		;SET BULGE FLAG ON LEFT
				STA	BUFFER,X
				INX
				LDA	BUFFER,X
				ORA	#BLGMASK		;SET BULGE FLAG ON RIGHT
				STA	BUFFER,X
				INX
				LDA	#$FF
				STA	BUFFER,X		;STORE AN END FLAG
				INX
				LDA	DUMMY
				STA	BUFFER,X		;STORE CENTER INFORMATION
				INX					;LEAVE THIS ROUTINE AND NSEW ROUTINES
				PLA					;POP OFF ONE SUBROUTINE 
				PLA					;RETURN ADDRESS
END3			RTS
***END-OF-HALLWAY-SUBROUTIN***
***BEGINNING-OF-ONE-PAGE-SCANNER-ROUTINE***
SCANONE			LDA	#$00
				STA	DEPTH			;CLEAR DEPTH COUNTER
				STA	READPNT			;READING POINTER
				STA	ENDMARK			;AND END MARK FLAG
				LDA	#<HALLDAT		;STORE BEGINNING OF DATA
				STA	XYDATAL			;IN DATA POINTER ONE AND TWO
				STA	XYDATL2
				LDA	#>HALLDAT		;HIGH AND LOW
				STA	XYDATAH
				STA	XYDATH2
				LDA	#BLACK1
				STA	COLOR			;STORE BLACK1 IN COLOR (BYPASS HCOLOR)
				JSR	HALLDRW			;ERASE ONE SEGMENT
				INC	READPNT			;INCREMENT READ POINTER
				INC	READPNT
NOTEND1			INC	DEPTH			;INCREMENT DEPTH
				JSR	INCXY			;ADD DATAWID TO DATA POINTER
				LDA	#BLACK1
				STA	COLOR			;STORE BLACK1 IN COLOR (BYPASS HCOLOR)
				JSR	HALLDRW			;ERASE ONE SEGMENT
				CMP	#$FF			;WAS AN END SEGMENT REACHED?
				BNE	NOTEND2
				STA	ENDMARK
NOTEND2			LDA	DEPTH
				DEC	DEPTH
				CMP	SRANGE			;DOES DEPTH = SIGHT RANGE? 
				BNE	NOTEND3
				LDA	#$FF			;YES, THEN SET DEPTH COUNTER
				STA	ENDMARK
NOTEND3			LDA	#WHITE1
				STA	COLOR			;SET HCOLOR TO WHITE3
				JSR	SWITCHR			;SWITCH DATA POINTERS ONE AND TWO
GODRAW			JSR	HALLDRW			;DRAW ONE SEGMENT
				CMP	#$FF			;WAS AN END SEGMENT DRAWN?
				BEQ	EXITER			;YES, THEN EXIT
				LDA	SRANGE
				CMP	DEPTH			;IS SIGHT RANGE = TO DEPTH?
				BEQ	EXITER			;YES, THEN EXIT
				INC	DEPTH
				INC	READPNT			;AND READ POINTER 
				INC	READPNT
				JSR	INCXY			;ADD DATAWID TO DATA POINTER
				LDA	ENDMARK
				CMP	#$FF			;HAS ENDMARK FLAG BEEN SET?
				BEQ	GODRAW
				JSR	SWITCHR			;NO, THEN SWITCH DATA POINTER 1 AND 2 
				JMP	NOTEND1
EXITER			RTS
NOSCAN			LDA	#$00
				STA	DEPTH			;CLEAR DEPTH COUNTER TO ZERO
				STA	BUFFER
				STA	BUFFER+1
				LDA	#$02
				STA	READPNT			;SET READPNT TO TWO
				LDA	#<HALLDAT		;STORE BEGINNING OF DATA
				STA	XYDATAL			;IN DATA POINTER HIGH AND LOW
				LDA	#>HALLDAT
				STA	XYDATAH
				LDA	#WHITE1			;SET HCOLOR TO WHITE1
				STA	COLOR
NEXTSEG			JSR	HALLDRW			;DRAW A SEGMENT
				CMP	#$FF			;WAS AN END FLAG REACHED?
				BEQ	EXITER			;YES, THEN LEAVE
				LDA	DEPTH
				CMP	SRANGE			;DOES DEPTH EQUAL SIGHT RANGE
				BEQ	EXITER			;YES, THEN LEAVE
				INC	DEPTH
				JSR	INCXY			;INCREMENT DATA POINTER BY DATAWID
				INC	READPNT			;INCREMENT READPNT TWICE
				INC	READPNT
				JMP	NEXTSEG			;GO DRAW ANOTHER SEGMENT
SWITCHR			LDY	XYDATAL			;SWITCH DATA POINTERS 1 AND 2 
				LDA	XYDATL2
				STA	XYDATAL
				STY	XYDATL2
				LDY	XYDATAH
				LDA	XYDATH2
				STA	XYDATAH
				STY	XYDATH2
				RTS
INCXY			LDA	XYDATAL			;ADD DATA WIDTH TO 
				CLC					;COORDINATE DATA POINTER 
				ADC	#$26	
				STA	XYDATAL
				BCC	INCOUT
				INC	XYDATAH
INCOUT			RTS
***END-OF-ONE-PAGE-SCANNER-ROUTINE*** 
***BEGINNING-OF-HALL-DRAWING-SUBROUTINE*** 
HALLDRW			LDA	#$F0			;SET UP LEFT RIGHT FLAG
				STA	LRFLAG
				LDA	#$00
				STA	CLIPFLG
				STA	COLFLG
LOADER			LDX	READPNT
				LDA	BUFFER,X		;LOAD A SEGMENT
				INX
				STA	THOLDER			;STORE A SEGMENT IN A HOLDING LOCATION
				AND	#MASK76
				BEQ	SKIP2			;YES, THEN SKIP2
				LDY	#$0B
				JSR	DOLINES
				LDY	#$00
				JSR	DOLINES
				LDA	THOLDER
				AND	#MASK76
				CMP	#$80			;IS THIS A DOOR SEGMENT?
				BNE	NODOOR
				JSR	DOORDRW
NODOOR			LDA	THOLDER
				ORA	#DEBULGE
				CMP	#$FF
				BNE	NOBULGE
				LDY	#$14
				JSR	DOLINES
				JMP	SKIP1
NOBULGE			LDY	#$04	
				JSR	DOLINES
				LDA	BUFFER+1,X
				AND	#MASK76
				BNE	SKIP8	
				LDA	DEPTH
				CMP	SRANGE
				BNE	GOSKIP1
				LDA	XYDATAL
				PHA
				CLC
				ADC	#$26
				STA	XYDATAL
				LDA	XYDATAH
				PHA
				ADC	#$00
				STA	XYDATAH
				JSR	AD1DRAW
				PLA
				STA	XYDATAH
				PLA
				STA	XYDATAL
				JMP	SKIP1
SKIP8			LDY	#$08			;DRAW B2 SEGMENTS
				JSR	DOLINES
GOSKIP1			JMP	SKIP1
SKIP2			LDA	DEPTH	
				CMP	#$00			;IS THERE A PREVIOUS SEGMENT?
				BEQ	SKIP6			;NO, THEN SKIP6
				LDA	BUFFER-3,X
				AND	#SPHMASK
				BEQ	SKIP6A	
				LDY	#$00
				JSR	DOLINES
				JMP	SKIP6
SKIP6A			LDA	BUFFER-3,X		;IS IT AN OPENING? 
				AND	#OPESPEC
				BEQ	SKIP6			;YES, THEN SKIP6
				JSR	AD1DRAW	
SKIP6			LDA	THOLDER
				ORA	#DEBULGE
				CMP	#$FF			;IS CURRENT SEGMENT BULGED? 
				BNE	NOSKP7A	
				LDA	THOLDER
				AND	#SPHMASK
				BEQ	GOSKP7A	
				LDY	#$28
				JSR	DOLINES
				LDY	#$14
				JSR	DOLINES
				JSR	FSIDRAW
				LDA	BUFFER-3,X
				AND	#SPHMASK
				BEQ	GOSKP1	
				LDY	#$00
				JSR	DOLINES
GOSKP1			JMP	SKIP1	
GOSKP7A			JMP	SKIP7A		
NOSKP7A			LDA	BUFFER-1,X	
				AND	#OPESPEC
				BNE	ANYWAY	
				LDA	BUFFER+1,X
				AND	#MASK76
				BNE	ANYWAY2	
				LDA	BUFFER+1,X
				AND	#SPHMASK
				BEQ	GOSKP1
				LDY	#$28
				JSR	DOLINES
				LDY	#$04
				JSR	DOLINES
				JMP	SKIP1
ANYWAY2			LDY	#$14	
				JSR	DOLINES
				LDA	THOLDER
				AND	#SPHMASK
				BEQ	NOK
				LDY	#$28
				JSR	DOLINES
				JSR	FSIDRAW
				JMP	NOK2
NOK				JSR	KDRAW
NOK2			LDA	DEPTH
				CMP	SRANGE
				BEQ	SKIP1
				LDY	#$04
				JSR	DOLINES
				JMP	SKIP1
ANYWAY			LDY	#$14	
				JSR	DOLINES
				LDA	DEPTH
				CMP	SRANGE
				BEQ	NOB1DRW
				LDY	#$04
				JSR	DOLINES
NOB1DRW			LDA	THOLDER
				LDY	#$00
				AND	#$03	
				CMP	#$02	
				BNE	GOE
				LDY	#$FF
GOE				JSR	EDRAW
				JMP	SKIP7
SKIP7A			LDA	THOLDER
				AND	#OPESPEC
				BNE	SKIP7C	
				LDA	THOLDER
				AND	#SPLMASK
				BEQ	ISNTSPC
				LDA	LRFLAG
				AND	#$24
				JMP	SKIP7B
ISNTSPC			LDA	LRFLAG
				AND	#$81
				JMP	SKIP7B	
SKIP7C			CMP	#$02	
				BNE	SKIP7
				LDA	LRFLAG
				AND	#$42
				BPL	SKIP7B
SKIP7			LDA	LRFLAG
SKIP7B			ORA	CLIPFLG
				STA	CLIPFLG
SKIP1			LDA	#$0F
				CMP	LRFLAG
				BEQ	BOTH
				STA	LRFLAG
				LDA	THOLDER			;NO, THEN IS NEXT PART OF SEGMENT A SPECIAL SPECIAL?
				AND	#MASK76
				CMP	#$40
				BEQ	BOTH
				INC	READPNT
				JMP	LOADER			;NO, THEN CHECK REST OF SEGMENT
BOTH			DEC	READPNT
				LDA	BUFFER,X
				INX
				CMP	#$FF
				BEQ	FRONT
				LDA	#$00
				RTS	
AD1DRAW			LDY	#$00
				JSR	DOLINES
				LDY	#$11
				JMP	DOLINES
***END-OF-HALL-DRAWING-SUBROUTINE***
***FRONT-WALL-DRAWING-SUBROUTINE***
FRONT			LDA	BUFFER,X		;LOAD ONE HALL BYTE
				PHA					;PUSH HALL BYTE
				AND	#SPHMASK
				BEQ	NOFCHNG
				JMP	FACECHN
NOFCHNG			LDY	#$0A
				JSR	ACROSS
				LDY	#$28
				JSR	ACROSS
				LDY	#$08
				JSR	ACROSS
FMERGE			LDA	#$F0
				STA	LRFLAG
				LDA	CLIPFLG
				AND	#$F0
				CMP	#$80
				BEQ	KLEFT
				CMP	#$20
				BNE	NO2	
				PLA
				PHA
				AND	#MASK76
				BNE	KLEFT
				BEQ	NOLSIDE
NO2				LDY	#$FF
				CMP	#$40
				BEQ	GOEL
				LDY	#$00
				CMP	#$F0
				BNE	NOLSIDE
GOEL			JSR	EDRAW
				PLA
				PHA
				AND	#MASK76
				BNE	VD1
				LDY	#$14
				JSR	DOLINES
				JMP	NOLSIDE
VD1				JSR	VDRAW
				JMP	NOLSIDE
KLEFT			JSR	KDRAW
NOLSIDE			LDA	#$0F
				STA	LRFLAG
				LDA	CLIPFLG
				AND	#$0F
				CMP	#$01
				BEQ	KRIGHT
				CMP	#$04
				BNE	NO4	
				PLA
				PHA
				AND	#MASK76
				BNE	KRIGHT
				BEQ	SKIPALL
NO4				LDY	#$FF
				CMP	#$02
				BEQ	GOER
				LDY	#$00
				CMP	#$0F
				BNE	SKIPALL
GOER			JSR	EDRAW
				PLA
				PHA
				AND	#MASK76
				BNE	VD2
				LDY	#$14
				JSR	DOLINES
				JMP	SKIPALL
VD2				JSR	VDRAW
				JMP	SKIPALL
KRIGHT			JSR	KDRAW
SKIPALL			PLA					;PULL HALL BYTE
				AND	#MASK76			;MASK ALL BUT BITS 7 AND 6
				CMP	#$80			;IS IT A DOOR? 
				BNE	ENDEND			;NO, THEN END 
				LDA	#$F0			;SET LRFLAG TO LEFT
				STA	LRFLAG
				LDY	#$17
				JSR	DOLINES
				LDA	#$0F
				STA	LRFLAG
				LDY	#$1B
				JSR	DOLINES
				LDA	#$F0
				STA	LRFLAG
				LDY	#$1E			;TO 16 LEFT
				JSR	HLINE
ENDEND			LDA	#$FF
				RTS
FACECHN			LDA	DEPTH
				CMP	SRANGE
				BNE	GOFACE
				JMP	FMERGE
GOFACE			LDA	CLIPFLG
				AND	#$F0
				CMP	#$20
				BNE	LNONE
				JSR	RHALF
				JSR	XTENDLR
				JMP	FMERGE
LNONE			LDA	CLIPFLG
				AND	#$0F	
				CMP	#$04
				BNE	RNONE
				JSR	LHALF
				JSR	XTENDLR
				JMP	FMERGE
RNONE			JSR	RHALF
				JSR	LHALF
				JSR	XTENDLR
				JMP	FMERGE
RHALF			LDA	#$0F
				STA	LRFLAG
				JMP	HALF
LHALF			LDA	#$F0
				STA	LRFLAG
HALF			LDA	XYDATAL
				STA	XYL2	
				CLC
				ADC	#$26
				STA	XYDATAL
				LDA	XYDATAH
				STA	XYH2	
				ADC	#$00
				STA	XYDATAH
				LDY	#$08
				LDA	(XYDATAL),Y
				STA	HIDEX
				AND	#$01
				BNE	GIS
				INC	HIDEX
GIS				LDY	DEPTH
				LDA	SPECY,Y
				STA	HIDEXHI
				LDY	#$02
				JSR	POINT
				JSR	ODD28L
				JSR	FLIPPIT
				LDY	#$0A
				JSR	HLINE
				LDY	#$08
				JSR	POINT
				JSR	FLIPPIT
				JSR	ODD28L
				LDY	#$08
				JSR	POINT
				JSR	FLIPPIT
				LDY	#$08
				JSR	HLINE	
				JSR	FLIPPIT
				LDX	HIDEX
				LDA	HIDEXHI
				JSR	PNTCALL
				JSR	FLIPPIT
				LDA	HIDEX
				STA	SCRATCH
				LDY	#$09
				LDA	(XYDATAL),Y
				TAY
				DEY
				JSR	HLINE2
				RTS
XTENDLR			LDA	#$FF
				STA	COLFLG
				LDA	#$02
				STA	FREE1+1
				LDY	#$08
				JSR	POINT
				LDY	#$09
				JSR	XLR
				LDY	#$0A
				JSR	POINT
				LDY	#$0B
				JSR	XLR
				JSR	FLIPPIT
				LDY	#$08
				JSR	POINT
				LDY	#$09
				JSR	XLR
				LDX	HIDEX
				LDA	HIDEXHI
				JSR	PNTCALL
				LDA	LRFLAG
				CMP	#$0F	
				BNE	WANTR
				LDY	HIDEXHI
				LDX	#$00
				TXA
				JSR	HLIN
				JMP	XOUT
WANTR			LDY	HIDEXHI
				LDX	#$01
				LDA	#$16
				JSR	HLIN
XOUT			LDA	#$00
				STA	COLFLG
				JSR	FLIPPIT
				LDA	#$01
				STA	FREE1+1
				RTS
XLR				LDA	LRFLAG
				CMP	#$F0	
				BEQ	RGO
				JMP	EXTENDL
RGO				JMP	EXTENDR
ODD28L			LDA	HIDEX
				STA	SCRATCH
				LDY	HIDEXHI
				JMP	HLINE2
FLIPPIT			LDA	XYL2
				LDY	XYDATAL
				STY	XYL2
				STA	XYDATAL
				LDA	XYH2
				LDY	XYDATAH
				STY	XYH2
				STA	XYDATAH
				RTS
SPECY			DB	$7B,$7D,$7F
				DB	$81,$82,$83
ACROSS			TYA
				PHA
				LDA	#$F0
				STA	LRFLAG
				JSR	POINT
				LDA	#$0F
				STA	LRFLAG
				PLA
				TAY
				JMP	HLINE
***END-OF-FRONT-HALL-DRAWING-SUBROUTINE***
***E-SEGMENT-DRAWING-SUBROUTINE***
EDRAW			TXA					;PUSH X REGISTER 
				PHA
				LDA	DEPTH			;IS DEPTH AT ZERO?
				BNE	OTHER1			;NO, GOTO OTHER HIDDEN LINE DRAWER 
				LDA	LRFLAG
				CMP	#$F0			;IS LEFT SIDE BEING DRAWN?
				BNE	GORIGHT			;NO, THEN GOTO RIGHT PART OF ROUTINE
				TYA
				BEQ	NORDOOR
				LDY	#$21
				LDA	(XYDATAL),Y
				LDX	#$00
				LDY	#$00
				JSR	HPOSN
				LDY	#$23
				LDA	(XYDATAL),Y
				TAY
				LDA	#$00
				TAX
				JSR	HLIN
				JMP	NORDOOR	
GORIGHT			TYA
				BEQ	NORDOOR
				LDY	#$21
				LDA	(XYDATAL),Y
				LDX	#$16
				LDY	#$01
				JSR	HPOSN
				LDY	#$23
				LDA	(XYDATAL),Y
				TAY
				LDA	#$16
				LDX	#$01
				JSR	HLIN
NORDOOR			LDY	#$0A
				JSR	SUBD
				LDY	#$28
				JSR	SUBD
				LDY	#$08
				JSR	SUBD
				JMP	EXITE
OTHER1			TYA
				PHA
				LDA	#$00
				STA	EDGE
				LDY	#$28
				LDA	(XYDATAL),Y
				PHA
				STA	HIDEX
				LDA	#$00
				STA	HIDEXHI
				ASL	HIDEX
				ROL	HIDEXHI
				CLC
				PLA
				ADC	HIDEX
				STA	HIDEX
				LDA	#$00
				ADC	HIDEXHI	
				STA	HIDEXHI
				LDA	LRFLAG
				CMP	#$0F
				BNE	GOINLFT
				LDA	#$2E
				SEC
				SBC	HIDEX
				STA	HIDEX
				LDA	#$02
				SBC	HIDEXHI
				STA	HIDEXHI
				BEQ	GREENER	
				CMP	#$02
				BCS	TOOBIG
				LDA	HIDEX
				CMP	#$18
				BCS	TOOBIG	
GREENER			LDA	HIDEX
				LSR
				BCS	DRAWSOM
				DEC	HIDEX
				JMP	DRAWSOM
TOOBIG			LDA	#$17
				STA	HIDEX
				LDA	#$01
				STA	HIDEXHI
				STA	EDGE
				BNE	DRAWSOM
GOINLFT			SEC
				LDA	HIDEX
				SBC	#$17
				STA	HIDEX
				LDA	HIDEXHI
				SBC	#$01
				STA	HIDEXHI
				BMI	HITEDGE	
				LDA	HIDEX
				LSR
				BCS	DRAWSOM
				INC	HIDEX
				JMP	DRAWSOM
HITEDGE			LDA	#$00
				STA	HIDEX
				LDA	#$00
				STA	HIDEXHI
				LDA	#$01
				STA	EDGE
DRAWSOM			LDA	#$FF
				STA	COLFLG
				LDY	#$0A	
				JSR	HLINES
				ASL
				ASL
				STA	COLISSN
				LDY	#$08
				JSR	HLINES
				ORA	COLISSN	
				STA	COLISSN	
				PLA
				BNE	YESDOOR
				JMP	NOTDOOR
YESDOOR			LDY	#$28	
				LDA	(XYDATAL),Y
				ASL
				PHA
				SEC
				LDY	#$20
				SBC	(XYDATAL),Y
				STA	ADJMNT2
				PLA
				SEC
				LDY	#$1E	
				SBC	(XYDATAL),Y
				STA	ADJMNT1
				LDY	#$28
				LDA	(XYDATAL),Y
				ASL
				SEC
				SBC	#$16
				PHA
				CLC
				LDY	#$20
				ADC	(XYDATAL),Y
				STA	ADJMNTB
				PLA
				CLC
				LDY	#$1E
				ADC	(XYDATAL),Y
				STA	ADJMNTA
				LDY	#$28
				JSR	POINT
				LDY	#$29
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNT2
				STA	SCRATCH
				JSR	HLINE2
				CMP	#$01
				BNE	CANGO
				ASL
				ORA	COLISSN
				STA	COLISSN
				JMP	CANTGO
CANGO			LDY	#$21
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNT2
				STA	SCRATCH
				JSR	HLINE2
				CMP	#$01
				BEQ	DOBOTTM
				LDY	#$1F
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNT1
				STA	SCRATCH
				JSR	HLINE2
				CMP	#$01
				BEQ	DOBOTTM
				LDA	EDGE
				BEQ	FULL1A
				LDY	#$1F	
				JSR	SUBD2
				JMP	DOBOTTM
FULL1A			LDY	#$1F
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNTA
				STA	SCRATCH
				JSR	HLINE2
				CMP	#$01
				BEQ	DOBOTTM
				LDY	#$21
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNTB
				STA	SCRATCH
				JSR	HLINE2
DOBOTTM			LDY	#$29
				LDX	ADJMNT2
				LDA	(XYDATAL),Y
				JSR	PNTCALL
				LDY	#$23
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNT2
				STA	SCRATCH
				JSR	HLINE2
				CMP	#$01
				BEQ	BOTDONE
				LDY	#$25
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNT1	
				STA	SCRATCH
				JSR	HLINE2
				CMP	#$01
				BEQ	BOTDONE
				LDA	EDGE
				BEQ	FULL1B
				LDY	#$25	
				JSR	SUBD2
FIN21			LDY	#$29
				LDA	(XYDATAL),Y
				LDX	ADJMNT2
				JSR	PNTCALL
				LDY	#$29
				JSR	SUBD2
				JMP	CANTGO
FULL1B			LDY	#$25
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNTA
				STA	SCRATCH
				JSR	HLINE2
				CMP	#$01
				BEQ	BOTDONE
				LDY	#$23
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNTB
				STA	SCRATCH
				JSR	HLINE2
BOTDONE			LDA	EDGE
				BNE	FIN21
				LDY	#$29
				LDA	(XYDATAL),Y	
				LDX	ADJMNT2
				JSR	PNTCALL
				LDY	#$29
				LDA	(XYDATAL),Y	
				TAY
				LDA	ADJMNTB
				STA	SCRATCH
				JSR	HLINE2
				CMP	#$01
				BNE	LASTLIN
				ASL
				ORA	COLISSN
				STA	COLISSN
				JMP	CANTGO
LASTLIN			LDY	#$21
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNTB
				STA	SCRATCH
				JSR	HLINE2
				JSR	SUBC
				LDY	#$25
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNTB
				STA	SCRATCH
				JSR	HLINE2
				JSR	SUBC
				LDY	#$29
				JSR	SUBA
				ASL
				ORA	COLISSN
				STA	COLISSN
				JMP	CANTGO
NOTDOOR			LDY	#$28	
				JSR	HLINES
				ASL
				ORA	COLISSN
				STA	COLISSN
CANTGO			CMP	#$07
				BEQ	EXITE	
				LDA	EDGE
				BNE	EXITE
				LDA	COLISSN
				AND	#$02
				BNE	BHIT
				LDY	#$29
				JSR	SUBB
				LDY	#$0B
				JSR	SUBA
				LDY	#$29
				JSR	SUBB
				LDY	#$09
				JSR	SUBA
				JMP	EXITE
BHIT			LDA	COLISSN
				AND	#$40
				BNE	AHIT
				LDY	#$0B
				JSR	SUBB
				LDY	#$29
				JSR	SUBA
				JMP	EXITE
AHIT			LDY	#$09
				JSR	SUBB
				LDY	#$29
				JSR	SUBA
EXITE			PLA
				TAX
				LDA	#$00
				STA	COLFLG
				RTS
HLINES			TYA
				PHA
				JSR	POINT
				PLA
				TAY
				INY
				JMP	SUBA
EXTENDL			LDA	(XYDATAL),Y		;LOAD Y REGISTER Y COORDINATE
				TAY					;TRANSFER TO Y REGISTER 
				LDX	#$00			;SET X
				TXA					;AND ACCUMULATOR TO ZERO
				JMP	HLIN			;DRAW A LINE
EXTENDR			LDA	(XYDATAL),Y		;LOAD Y COORDINATE
				TAY					;TRANSFER TO Y REGISTER
				LDX	#$01			;LOAD X AND ACCUMULATOR
				LDA	#$16			;WITH 278
				JMP	HLIN			;DRAW A LINE
SUBA			LDA	(XYDATAL),Y
				TAY
				LDA	HIDEX
				LDX	HIDEXHI
				JMP	HLIN
SUBB			LDA	(XYDATAL),Y
				LDX	HIDEX
				LDY	HIDEXHI
				JMP	HPOSN
SUBC			LDY	#$29
				LDA	(XYDATAL),Y
				LDX	ADJMNTB
				JMP	PNTCALL
SUBD			STY	COUNT
				JSR	POINT
				LDY	COUNT
				INY
SUBD2			BIT	LRFLAG
				BMI	EXLEF
				JMP	EXTENDR
EXLEF			JMP	EXTENDL
***SIDE-FACE-CHANGE-DRAWING-ROUTINE***
FSIDRAW			TXA
				PHA
				LDA	#$FF
				STA	COLFLG
				LDY	#$08
				JSR	POINT
				LDY	#$09
				LDA	LRFLAG
				CMP	#$F0
				BNE	RLINER
				JSR	EXTENDL
				JMP	CLINER
RLINER			JSR	EXTENDR
CLINER			LDA	DEPTH
				CMP	#$04
				BCC	NOPROB
				PLA
				PHA
				TAX
				LDA	BUFFER-3,X
				AND	#SPHMASK
				BEQ	NOGO5
NOPROB			LDY	#$08
				JSR	POINT
				LDA	#$06	
				STA	FREE1+1
				LDA	#$00
				STA	SCRATCH
				LDY	DEPTH
				LDA	POINT5,Y
				TAY
				JSR	HLINE2
				LDA	#$01
				STA	FREE1+1
NOGO5			LDY	#$28
				JSR	POINT
				LDA	#$00
				STA	SCRATCH
				LDY	DEPTH
				LDA	POINT21,Y
				TAY
				JSR	HLINE2
				LDY	#$0A
				JSR	POINT
				LDA	#$00
				STA	SCRATCH
				LDY	DEPTH
				LDA	POINT6,Y
				TAY
				JSR	HLINE2
				LDA	#$00
				STA	COLFLG
				PLA
				TAX
				RTS
POINT5			DB	$B3,$92,$86
				DB	$80,$7C,$7A
				DB	$78,$77
POINT6			DB	$0F,$59,$73
				DB	$80,$88,$8E
				DB	$91,$94
POINT21			DB	$67,$78,$7F
				DB	$83,$85,$87
				DB	$88,$89
***K-SEGMENT-DRAWING-ROUTINE***
KDRAW			TXA
				PHA
				LDA	DEPTH
				BNE	NOTOFF
				JMP	OFFEDGE
NOTOFF			LDY	#$28
				LDA	(XYDATAL),Y
				STA	HIDEX
				LDA	#$00
				STA	HIDEXHI
				ASL	HIDEX
				ROL	HIDEXHI
				LDY	#$08
				LDA	(XYDATAL),Y
				TAY
				LDA	HIDEX
				STY	HIDEX
				SEC
				SBC	HIDEX
				STA	HIDEX
				LDA	#$00
				STA	HIDEXHI
				LDA	LRFLAG
				CMP	#$0F
				BNE	NORCALC
				LDA	#$17
				SEC
				SBC	HIDEX
				STA	HIDEX
				LDA	#$01
				SBC	HIDEXHI
				STA	HIDEXHI
NORCALC			LDA	#$FF
				STA	COLFLG
				LDA	#$03	
				STA	FREE1+1
				LDY	#$28
				JSR	POINT
				LDY	#$0B
				JSR	SUBA
				LDY	#$28
				JSR	POINT
				LDY	#$09
				JSR	SUBA
				LDA	#$01
				STA	FREE1+1
				LDY	#$0A
				JSR	POINT
				LDY	#$0B
				JSR	SUBA
				LDY	#$08
				JSR	POINT
				LDY	#$09
				JSR	SUBA
				JMP	EXITK
OFFEDGE			LDY	#$0A
				JSR	SUBD
				LDY	#$08
				JSR	SUBD
				LDY	#$28
				JSR	POINT
				LDA	LRFLAG	
				CMP	#$0F
				BEQ	OFFRGHT
				LDY	#$24
				LDA	#$00
				LDX	#$00
				JSR	HLIN
				LDY	#$28
				JSR	POINT
				LDY	#$A0
				LDA	#$00
				LDX	#$00
				JSR	HLIN
				JMP	EXITK
OFFRGHT			LDY	#$24
				LDA	#$17
				LDX	#$01
				JSR	HLIN
				LDY	#$28
				JSR	POINT
				LDY	#$A0
				LDA	#$17
				LDX	#$01
				JSR	HLIN
EXITK			LDA	#$00
				STA	COLFLG
				PLA
				TAX
				RTS
***V-SEGMENT-DRAWING-ROUTINE***
VDRAW			LDA	#$FF
				STA	COLFLG
				LDY	#$28
				LDA	(XYDATAL),Y
				TAX
				LSR
				BCS	GREENED
				DEX
GREENED			LDA	DEPTH
				BNE	GREEND2
				INX
				INX
GREEND2			TXA
				PHA
				LDY	#$29	
				LDA	(XYDATAL),Y
				JSR	PNTCALL
				PLA
				PHA
				STA	SCRATCH
				LDY	#$0B
				LDA	(XYDATAL),Y
				TAY
				JSR	HLINE2
				PLA
				PHA
				TAX
				LDY	#$29
				LDA	(XYDATAL),Y
				JSR	PNTCALL
				PLA
				STA	SCRATCH
				LDY	#$09
				LDA	(XYDATAL),Y
				TAY
				JSR	HLINE2
				LDA	#$00
				STA	COLFLG
				RTS
PNTCALL			PHA
				JMP	POINT2
***BEGINNING-OF-SIDE-DOOR-DRAWING-SUBROUTINE***
DOORDRW			LDY	#$1F
				JSR	DOLINES
				LDA	DEPTH	
				BEQ	PULLOUT
				LDY	#$25
				JSR	DOLINES
PULLOUT			RTS
***END-OF-SIDE-DOOR-DRAWING-SUBROUTINE***
***BEGINNING-OF-POINT-DRAWING-SUBROUTINE***
POINT			LDA	(XYDATAL),Y		;LOAD X COORDINATE
				TAX					;AND MOVE TO X REGISTER 
				INY
				LDA	(XYDATAL),Y		;LOAD Y COORDINATE
				PHA					;AND PUSH IT
POINT2			LDA	LRFLAG
				LSR					;IS THIS DRAWN ON THE LEFT OR RIGHT?
				BCC	DOLEFT			;LEFT, THEN SKIP
				TXA					;SUBTRACT X COORDINATE FROM 279
				STA	SCRATCH
				LDA	#$16	
				SEC
				SBC	SCRATCH
				TAX
				LDA	#$01
				SBC	#$00
				TAY
				PLA					;PULL Y COORDINATE
				JMP	POSITN
DOLEFT			PLA					;PULL Y COORDINATE
				LDY	#$00			;CLEAR HIGH BYTE OF X COORDINATE
POSITN			JMP	HPOSN			;JUMP TO HPSON ROUTINE
***END-OF-POINT-DRAWING-SUBROUTINE***
***BEGINNING-OF-LINE-DRAWING-SUBROUTINE***
HLINE			LDA	(XYDATAL),Y		;LOAD X COORDINATE
				STA	SCRATCH
				INY	
				LDA	(XYDATAL),Y		;LOAD Y COORDINATE
				TAY					;MOVE TO Y REGISTER
HLINE2			LDA	LRFLAG
				LSR					;IS THIS DRAWN ON THE RIGHT OR LEFT?
				BCC	LEFTDO			;LEFT, THEN SKIP
				LDA	#$16			;SUBTRACT X COORDINATE FROM 278 
				SEC
				SBC	SCRATCH
				STA	SCRATCH
				LDA	#$01
				SBC	#$00
				TAX
				LDA	SCRATCH
				JMP	HLINER
LEFTDO			LDA	SCRATCH
				LDX	#$00
HLINER			JMP	HLIN			;JUMP TO HLINE ROUTINE
DOLINES			TXA
				PHA
				STY	COUNT
LLOOPP			LDA	LINDATA,Y
				STA	LHOLD
				AND	#$3F
				TAY
				BIT	LHOLD
				BVC	ISLIN
				JSR	POINT
				JMP	LPCOM
ISLIN			JSR	HLINE
LPCOM			INC	COUNT
				LDY	COUNT
				BIT	LHOLD
				BPL	LLOOPP
				PLA
				TAX
				RTS
LINDATA			DB	$4C,$00,$44		;A DATA
				DB	$86
				DB	$4A,$26,$6A		;B1 DATA
				DB	$88
				DB	$66,$28,$AA		;B2 DATA
				DB	$4C,$0A,$42		;C1 DATA
				DB	$28,$46,$88
				DB	$4C,$02,$86		;D1 DATA
				DB	$4A,$28,$88		;D2 DATA
				DB	$5E,$20,$22		;SKIPALL1
				DB	$A4
				DB	$24,$22,$20		;SKIPALL2
				DB	$9E
				DB	$50,$12,$14		;DOORDRW1
				DB	$16,$18,$9A
				DB	$1C,$0E,$90		;DOORDRW2
				DB	$4C,$0A,$46		;C2 DATA
				DB	$88
***END-OF-LINE-DRAWING-SUBROUTINE***

DORFACE			LDX	XPOS
				LDA	DIRECTN
				BMI	EWSKIPD
				LDX	YPOS
EWSKIPD			LSR
				BCS	SESKIPD
				DEX
				BEQ	GOFCHAN
DORFOUT			RTS
SESKIPD			LDY	SHELL
				LDA	WIDTH_TABLE-1,Y
				STA	VALUES+3
				CPX	VALUES+3
				BNE	DORFOUT
GOFCHAN			PLA
				PLA
FCHANGE			LDA	XPOS
				STA	VALUES
				LDA	YPOS
				STA	VALUES+1
				LDA	#$01
				STA	VALUES+2
				LDY	SHELL
				LDA	WIDTH_TABLE-1,Y
				STA	VALUES+3
				SEC
				SBC	XPOS
				STA	VALUES+4
				INC	VALUES+4
				LDA	VALUES+3
				SEC
				SBC	YPOS
				STA	VALUES+5
				INC	VALUES+5
				LDA	FACE
				SEC
				SBC	#$01
				ASL
				ASL
				STA	SCRATCH
				ASL
				CLC
				ADC	SCRATCH
				STA	SCRATCH
				LDX	#$00
				BIT	DIRECTN
				BPL	NOEW
				INX
				INX
NOEW			LDA	DIRECTN
				LSR
				BCC	NOSE
				INX
NOSE			TXA
				CLC
				ADC	SCRATCH
				STA	SCRATCH
				TXA
				ASL
				CLC
				ADC	SCRATCH
				TAY
				LDA	DESTDAT,Y
				STA	FACE
				INY
				LDA	DESTDAT,Y
				STA	DIRECTN
				INY
				LDA	DESTDAT,Y
				PHA
				LSR
				LSR
				LSR
				LSR
				TAX
				LDA	VALUES,X
				STA	XPOS
				PLA
				AND	#$0F	
				TAX
				LDA	VALUES,X
				STA	YPOS
				JSR	GETNSEW
				JSR	PCHECK3
				CMP	#$FF
				BEQ	RERD2
				JSR	HGR
				JSR	NOSCAN
RERD2			JMP	RDKEY

WIDTH_TABLE
			do	ORIGINAL
				DB	17,15,13,11,9
			else
				DB	15,13,11,9
			fin

VALUES			DB	$00,$00,$00
				DB	$00,$00,$00

north			=	$00
south			=	$0F
west			=	$F0
east			=	$FF

DESTDAT			DB	5,south,$42		;FROM FACE 1
				DB	3,south,$02
				DB	2,south,$12
				DB	4,south,$52
				DB	1,east,$20		;FROM FACE 2
				DB	6,east,$24
				DB	5,west,$31
				DB	3,east,$21
				DB	1,north,$03		;FROM FACE 3
				DB	6,south,$02
				DB	2,west,$31
				DB	4,east,$21
				DB	1,west,$34		;FROM FACE 4
				DB	6,west,$30
				DB	3,west,$31
				DB	5,east,$21
				DB	1,south,$42		;FROM FACE 5
				DB	6,north,$43
				DB	4,west,$31
				DB	2,east,$21
				DB	3,north,$03		;FROM FACE 6
				DB	5,north,$43
				DB	2,north,$53
				DB	4,north,$13

BLIP			LDX	#$50
BLIP2			STA	CLICK
				LDA	#$05
				JSR	WAIT
				DEX
				BNE	BLIP2
				RTS

ADJRANG			JSR	BANK_2
				LDA	MXRANGE
				STA	TRANGE+12
				JSR	BANK_1
				LDY	#$0F
				JSR	CTEXTER
				LDA	#$00
				STA	MAXTEXT
				JSR	INPUT2
CHECKS6			LDA	TEXTBUF
				CMP	#$8D
				BNE	ISNTRET
				LDY	#$0F
				JSR	CTEXTER
				JMP	RDKEY	
ISNTRET			SEC
				SBC	#$B0
				BEQ	GORECL
				CMP	MXRANGE
				BCC	INRANGE
				BEQ	INRANGE
GORECL			JSR	RECALL
				JMP	CHECKS6
INRANGE			STA	SRANGE
				JSR	CHAROUT
				JSR	CLEAR2
				LDA	#$40
				STA	PAGE
				JSR	NOSCAN
				STA	SCNDARY
				JSR	MOVETO1
				STA	PRIMARY
				LDA	#$20
				STA	PAGE
				JMP	RDKEY	

TESBACK
				; button down changes 'T' tesback to select option
				BIT	$C061			;TEMP
				BMI	:TEMP			;TEMP
				LDA	FACE
				CMP	#$02
				BNE	:SKIPA
				LDA	SHELL
				CMP	#$01
				BEQ	:SKIPB
:SKIPA								;JMP RDKEY ;(any face for now)
:SKIPB			LDA	#side_MS
				STA	DISK_SIDE
				LDA	#$90
				STA	SSTOREH
				LDX	#<$00F0			; MTESSINFO
				LDY	#>$00F0
				LDA	#6
				JSR	SLOADER
				JMP	$9000

				; Load SELECT.OPTION
:TEMP			LDA	#0				;TEMP
				STA	CAMP_HERE		;TEMP
				LDA	#$78			;TEMP
				STA	SSTOREH			;TEMP
				LDY	#$02			;TEMP
				LDX	#$2D			;TEMP
				LDA	#$03			;TEMP
				JSR	SLOAD			;TEMP
				JMP	$7800			;TEMP
