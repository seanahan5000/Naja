***ENTRANCE-POINT-OF-HALLWAY-SUBROUTINE***
HALLWAY			LDX	#$01			;SET X AND Y FOR LEFT SIDE
				LDY	#$00
BEGIN			LDA	#MASK76			;MASK ALL BUT BITS 7 AND 6
				AND	FARLEFT,X		;DO AND OPERATION ON LEFT OR RIGHT
				STA	LEFTFLG,Y		;STORE IN LEFT OR RIGHT FLAG 
				STA	DUMMY
				BMI	LFTRGHT			;IF NOT A SPECIAL OR OPENING THEN SKIP
				LDX	#$00			;HANDLER FOR OPENINGS 
				TYA					;ADJUST FOR FARLEFT OR FARRIGHT
				BEQ	PASSAGE	
				LDX	#$04
PASSAGE			LDA	#MASK76			;***BEGINNING OF PASSAGE SUBROUTINE***
				AND	FARLEFT,X		;MASK ALL BUT BITS 7 AND 6
				CLC
				ROL
				ROL
				ROL					;MOVE BITS 7 AND 6 TO 2 AND 1
				ORA	LEFTFLG,Y		;COMBINE WITH LEFT OR RIGHT FLAG
				STA	LEFTFLG,Y		;AND STORE
LFTRGHT			CPY	#$01			;BOTH LEFT AND RIGHT CHECKED?
				BEQ	CNTRCHK			;YES, THEN LEAVE
				LDX	#$03
				LDY	#$01
				BNE	BEGIN			;Always..NO, THEN CHECK RIGHT SIDE
CNTRCHK			LDX	BUFFPNT
				LDA	LEFTFLG	
				STA	BUFFER,X		;STORE LEFT FLAG
				INX
				LDA	RGHTFLG
				STA	BUFFER,X		;AND RIGHT FLAG IN BUFFER
				INX
				LDA	CENTER			;CHECK THE CENTER
				AND	#MASK76
				STA	DUMMY
				BMI	BULGE			;IF A WALL OR DOOR THEN GOTO BULGE
				INC	BITDPTH
				STX	BUFFPNT			;STORE BUFFER POINTER
				RTS
BULGE			DEX
				DEX	
				LDA	BUFFER,X
				ORA	#BLGMASK		;SET BULGE FLAG ON LEFT
				STA	BUFFER,X
				INX
				LDA	BUFFER,X
				ORA	#BLGMASK		;SET BULGE FLAG ON RIGHT
				STA	BUFFER,X
				INX
				LDA	#$FF
				STA	BUFFER,X		;STORE AN END FLAG
				INX
				LDA	DUMMY
				STA	BUFFER,X		;STORE CENTER INFORMATION
				INX					;LEAVE THIS AND NSEW ROUTINES
				PLA					;POP OFF ONE SUBROUTINE 
				PLA					;RETURN ADDRESS
				RTS

SCANONE			LDA	PAGE
				EOR	#$60
				STA	PAGE
				CMP	#$20
				BNE	:1
				JSR	CLEAR1
				JMP	:2
:1				JSR	CLEAR2
:2				JSR	NOSCAN
				LDA	PAGE
				CMP	#$20
				BNE	:3
				STA	PRIMARY
				BEQ	MOVE_NOISE		;Always
:3				STA	SCNDARY
MOVE_NOISE		LDA	#$20
				STA	COUNT
:5				STA	CLICK
				LDA	#$04
				JSR	WAIT
				DEC	COUNT
				BNE	:5
				RTS

NOSCAN			LDA	#$00			;ROUTINE DRAWS HALLWAY WITHOUT SCAN
				STA	DEPTH			;CLEAR DEPTH COUNTER TO ZERO
				STA	BUFFER
				STA	BUFFER+1
				LDA	#$02
				STA	READPNT			;SET READPNT TO TWO
				LDA	#<HALLDAT		;STORE BEGINNING OF DATA
				STA	XYDATAL			;IN DATA POINTER HIGH AND LOW
				LDA	#>HALLDAT
				STA	XYDATAH
				LDA	#WHITE1
				STA	COLOR
:1				JSR	HALLDRW			;DRAW A SEGMENT
				CMP	#$FF			;WAS AN END FLAG REACHED?
				BEQ	:2				;YES, THEN LEAVE
				LDA	DEPTH
				CMP	SRANGE			;DOES DEPTH EQUAL SIGHT RANGE
				BEQ	:2				;YES, THEN LEAVE
				INC	DEPTH
				JSR	INCXY			;INCREMENT DATA POINTER BY DATAWID
				INC	READPNT
				INC	READPNT
				BNE	:1				;Always...GO DRAW ANOTHER SEGMENT
:2				RTS

SWITCHR			LDY	XYDATAL			;SWITCH DATA POINTERS ONE AND TWO
				LDA	XYDATL2
				STA	XYDATAL
				STY	XYDATL2
				LDY	XYDATAH
				LDA	XYDATH2
				STA	XYDATAH
				STY	XYDATH2
				RTS

INCXY			LDA	XYDATAL			;ADD DATA WIDTH TO COORD DATA POINTER
				CLC
				ADC	#$26	
				STA	XYDATAL
				BCC	:1
				INC	XYDATAH
:1				RTS

***END-OF-ONE-PAGE-SCANNER-ROUTINE*** 

***BEGINNING-OF-HALL-DRAWING-SUBROUTINE*** 
HALLDRW			LDA	#$F0			;SET UP LEFT RIGHT FLAG
				STA	LRFLAG
				LDA	#$00
				STA	CLIPFLG
				STA	COLFLG
LOADER			LDX	READPNT
				LDA	BUFFER,X		;LOAD A SEGMENT
				INX
				STA	HOLDER			;STORE A SEGMENT IN A HOLDING LOCATION
				AND	#MASK76
				CMP	#$40			;IS IT A SPECIAL?
				BNE	NOSPEC
				JMP	SKIP1			;YES, THEN SKIP1
NOSPEC			CMP	#$00			;IS IT AN OPENING?
				BEQ	SKIP2			;YES, THEN SKIP2
				JSR	CA_DRAW			;DRAW C AND A SEGMENTS
				LDA	HOLDER
				AND	#MASK76
				CMP	#$80			;IS THIS A DOOR SEGMENT?
				BNE	NODOOR
				JSR	DOORDRW
NODOOR			LDA	HOLDER
				ORA	#DEBULGE
				CMP	#$FF
				BNE	NOBULGE
				JSR	D2_DRAW			;DRAW D2 SEGMENTS
				JMP	SKIP1
NOBULGE			JSR	B1_DRAW
				LDA	BUFFER+1,X
				AND	#MASK76
				BNE	SKIP8	
				LDA	DEPTH
				CMP	SRANGE
				BEQ	NOSKIP1
				JMP	SKIP1
NOSKIP1			LDA	XYDATAL
				PHA
				CLC
				ADC	#$26
				STA	XYDATAL
				LDA	XYDATAH
				PHA
				ADC	#$00
				STA	XYDATAH
				JSR	AD1_DRAW		;DRAW A AND D1 SEGMENTS
				PLA
				STA	XYDATAH
				PLA
				STA	XYDATAL
				JMP	SKIP1
SKIP8			JSR	B2_DRAW			;DRAW B2 SEGMENTS
				JMP	SKIP1
SKIP2			LDA	DEPTH	
				CMP	#$00			;IS THERE A PREVIOUS SEGMENT?
				BEQ	SKIP6			;NO, THEN SKIP6
				LDA	BUFFER-3,X		;IS IT AN OPENING? 
				AND	#OPESPEC
				BEQ	SKIP6			;YES, THEN SKIP6
				JSR	AD1_DRAW		;DRAW A AND D1 SEGMENTS
SKIP6			LDA	HOLDER
				ORA	#DEBULGE
				CMP	#$FF			;IS CURRENT SEGMENT BULGED? 
				BEQ	SKIP7A	
				LDA	BUFFER-1,X	
				AND	#OPESPEC
				BNE	ANYWAY	
				LDA	BUFFER+1,X
				AND	#MASK76
				BEQ	SKIP1
ANYWAY2			JSR	D2K_DRAW		;DRAW D2 AND K SEGMENTS
				LDA	DEPTH
				CMP	SRANGE
				BEQ	SKIP1
				JSR	B1_DRAW			;DRAW B1 SEGMENTS
				JMP	SKIP1
ANYWAY			JSR	D2_DRAW
				LDA	DEPTH
				CMP	SRANGE
				BEQ	NOB1DRW
				JSR	B1_DRAW
NOB1DRW			LDA	HOLDER
				LDY	#$00
				AND	#$03	
				CMP	#$02	
				BNE	GOE
				LDY	#$FF
GOE				JSR	E_DRAW
				JMP	SKIP7
SKIP7A			LDA	HOLDER
				AND	#OPESPEC
				BNE	SKIP7C	
				LDA	LRFLAG
				AND	#$81
				JMP	SKIP7B	
SKIP7C			CMP	#$02	
				BNE	SKIP7
				LDA	LRFLAG
				AND	#$42
				BPL	SKIP7B			;Always
SKIP7			LDA	LRFLAG
SKIP7B			ORA	CLIPFLG
				STA	CLIPFLG
SKIP1			LDA	#$0F
				CMP	LRFLAG
				BEQ	BOTH
				STA	LRFLAG
				LDA	HOLDER			;NO, IS NEXT PART OF SEGMENT
				AND	#MASK76			;   A SPECIAL SPECIAL?
				CMP	#$40
				BEQ	BOTH
				INC	READPNT
				JMP	LOADER			;NO, THEN CHECK REST OF SEGMENT
BOTH			DEC	READPNT
				LDA	BUFFER,X
				INX
				CMP	#$FF
				BEQ	FRONT
				LDA	#$00
				RTS
***END-OF-HALL-DRAWING-SUBROUTINE***

***FRONT-WALL-DRAWING-SUBROUTINE***
FRONT			LDA	BUFFER,X		;LOAD ONE HALL BYTE
				PHA					;PUSH HALL BYTE
				LDY	#$0A			;DRAW POINT 6 LEFT
				JSR	LEFT_POINT
				LDY	#$0A			;TO 6 RIGHT
				JSR	RIGHT_MLINE
				LDY	#$28			;AND 21 LEFT
				JSR	LEFT_POINT
				LDY	#$28			;TO 21 RIGHT
				JSR	RIGHT_MLINE
				LDY	#$08			;AND 5 LEFT
				JSR	LEFT_POINT
				LDY	#$08			;TO 5 RIGHT
				JSR	RIGHT_MLINE
				LDA	#$F0
				STA	LRFLAG
				LDA	CLIPFLG
				AND	#$F0
				CMP	#$80
				BEQ	KLEFT
				LDY	#$FF
				CMP	#$40
				BEQ	GOEL
				LDY	#$00
				CMP	#$F0
				BNE	NOLSIDE
GOEL			JSR	EV_DRAW
				JMP	NOLSIDE
KLEFT			JSR	K_DRAW
NOLSIDE			LDA	#$0F
				STA	LRFLAG
				LDA	CLIPFLG
				AND	#$0F
				CMP	#$01
				BEQ	KRIGHT
				LDY	#$FF
				CMP	#$02
				BEQ	GOER
				LDY	#$00
				CMP	#$0F
				BNE	SKIPALL
GOER			JSR	EV_DRAW
				JMP	SKIPALL
KRIGHT			JSR	K_DRAW
SKIPALL			PLA					;PULL HALL BYTE
				AND	#MASK76			;MASK ALL BUT BITS 7 AND 6
				CMP	#$80			;IS IT A DOOR? 
				BNE	ENDEND			;NO, THEN END 
				LDY	#$1E			;DRAW POINT 16 LEFT
				JSR	LEFT_POINT
				LDA	#$F0
				STA	LRFLAG
				LDY	#$20			;TO 17 LEFT
				JSR	MLINE
				LDY	#$22			;TO 18 LEFT
				JSR	FAST_VLINE
				LDY	#$24			;TO 19 LEFT
				JSR	MLINE
				LDY	#$24			;TO 19 RIGHT
				JSR	RIGHT_MLINE
				LDY	#$1E			;DRAW POINT 16 LEFT
				JSR	LEFT_POINT
				LDY	#$1E			;TO 16 RIGHT
				JSR	RIGHT_MLINE
				LDY	#$20			;TO 17 RIGHT
				JSR	RIGHT_MLINE
				LDY	#$22			;TO 18 RIGHT
				JSR	FAST_VLINE
				LDY	#$24			;TO 19 RIGHT
				JSR	RIGHT_MLINE
ENDEND			LDA	#$FF
				RTS
***END-OF-FRONT-HALL-DRAWING-SUBROUTINE***

***A-SEGMENT-DRAWING-SUBROUTINE***
CA_DRAW			JSR	C_DRAW
A_DRAW			TXA
				PHA
				LDY	#$0C			;DRAW POINT7
				LDA	#$00			;TO 1
				JSR	SEGMENT
				LDY	#$04			;AND POINT 3
				LDA	#$06			;TO 4
				JSR	SEGMENT
				PLA
				TAX
				RTS

***B1-SEGMENT-DRAWING-SUBROUTINE***
B1_DRAW			TXA
				PHA
				LDY	#$0A			;DRAW POINT 6
				LDA	#$26			;TO 20
				JSR	SEGMENT
				LDY	#$2A			;DRAW POINT 22 
				LDA	#$08			;TO 5
				JSR	SEGMENT
				PLA
				TAX
				RTS

***B2-SEGMENT-DRAWING-SUBROUTINE***
B2_DRAW			TXA
				PHA
				LDY	#$26			;DRAW POINT 20
				LDA	#$28			;TO 21
				JSR	SEGMENT
				LDY	#$2A			;TO 22
				JSR	MLINE
				PLA
				TAX
				RTS

***C-SEGMENT-DRAWING-SUBROUTINE***
C_DRAW			TXA
				PHA
				LDY	#$0C			;DRAW POINT 7
				LDA	#$0A			;TO 6
				JSR	SEGMENT
				LDY	#$02			;AND POINT 2
				LDA	#$28			;TO 21
				JSR	SEGMENT
				LDY	#$06			;AND POINT 4
				LDA	#$08			;TO 5
				JSR	SEGMENT
				PLA
				TAX
				RTS

***D1-SEGMENT-DRAWING-SUBROUTINE***
AD1_DRAW		JSR	A_DRAW
D1_DRAW			TXA
				PHA
				LDY	#$0C			;DRAW POINT 7
				LDA	#$02			;TO 2
				JSR	SEGMENT
				LDY	#$06			;TO 4
				JSR	MLINE
				PLA	
				TAX
				RTS

***D2-DRAWING-SUBROUTINE***
D2_DRAW			TXA
				PHA
				LDY	#$0A			;DRAW POINT6
				LDA	#$28			;TO 21
				JSR	SEGMENT
				LDY	#$08			;TO 5
				JSR	MLINE
				PLA
				TAX
				RTS

***E-SEGMENT-DRAWING-SUBROUTINE***
E_DRAW			TXA
				PHA
				LDA	DEPTH			;IS DEPTH AT ZERO?
				BNE	OTHER1			;NO, GOTO OTHER HIDDEN LINE DRAWER 
				LDA	LRFLAG
				CMP	#$F0			;IS LEFT SIDE BEING DRAWN?
				BNE	GORIGHT			;NO, THEN GOTO RIGHT PART OF ROUTINE
				TYA
				BEQ	NOLDOOR
				LDY	#$21
				LDA	(XYDATAL),Y
				LDX	#$00
				LDY	#$00
				JSR	HPOSN
				LDY	#$23
				LDA	(XYDATAL),Y
				TAY
				LDA	#$00
				TAX
				JSR	HLIN
NOLDOOR			LDY	#$0A			;DRAW POINT 6
				LDA	#$0B
				JSR	SEG_EXTENDL		;HORIZONTALLY TO LEFT EDGE OF SCREEN
				LDY	#$28			;DRAW POINT 21
				LDA	#$29
				JSR	SEG_EXTENDL		;HORIZONTALLY TO LEFT EDGE OF SCREEN
				LDY	#$08			;DRAW POINT 5
				LDA	#$09
				JSR	SEG_EXTENDL		;HORIZONTALLY TO LEFT EDGE OF SCREEN
				JMP	EXITE			;EXIT THE ROUTINE
GORIGHT			TYA
				BEQ	NORDOOR
				LDY	#$21
				LDA	(XYDATAL),Y
				LDX	#$16
				LDY	#$01
				JSR	HPOSN
				LDY	#$23
				LDA	(XYDATAL),Y
				TAY
				LDA	#$16
				LDX	#$01
				JSR	HLIN
NORDOOR			LDY	#$0A			;DRAW POINT 6
				LDA	#$0B
				JSR	SEG_EXTENDR		;HORIZONTALLY TO RIGHT EDGE OF SCREEN
				LDY	#$28			;DRAW POINT 21
				LDA	#$29
				JSR	SEG_EXTENDR		;HORIZONTALLY TO RIGHT EDGE OF SCREEN
				LDY	#$08			;DRAW POINT 5
				LDA	#$09
				JSR	SEG_EXTENDR		;HORIZONTALLY TO RIGHT EDGE OF SCREEN
				JMP	EXITE
OTHER1			TYA
				PHA
				LDA	#$00
				STA	EDGE
				LDY	#$28
				LDA	(XYDATAL),Y
				PHA
				STA	HIDEX
				LDA	#$00
				STA	HIDEXHI
				ASL	HIDEX
				ROL	HIDEXHI
				CLC
				PLA
				ADC	HIDEX
				STA	HIDEX
				LDA	#$00
				ADC	HIDEXHI	
				STA	HIDEXHI
				LDA	LRFLAG
				CMP	#$0F
				BNE	GOINLFT
				LDA	#$2E
				SEC
				SBC	HIDEX
				STA	HIDEX
				LDA	#$02
				SBC	HIDEXHI
				STA	HIDEXHI
				BEQ	GREENER	
				CMP	#$02
				BCS	TOOBIG
				LDA	HIDEX
				CMP	#$18
				BCS	TOOBIG	
GREENER			LDA	HIDEX
				LSR
				BCS	DRAWSOM
				DEC	HIDEX
				JMP	DRAWSOM
TOOBIG			LDA	#$17
				STA	HIDEX
				LDA	#$01
				STA	HIDEXHI
				STA	EDGE
				JMP	DRAWSOM
GOINLFT			SEC
				LDA	HIDEX
				SBC	#$17
				STA	HIDEX
				LDA	HIDEXHI
				SBC	#$01
				STA	HIDEXHI
				BMI	HITEDGE	
				LDA	HIDEX
				LSR
				BCS	DRAWSOM
				INC	HIDEX
				JMP	DRAWSOM
HITEDGE			LDA	#$00
				STA	HIDEX
				LDA	#$00
				STA	HIDEXHI
				LDA	#$01
				STA	EDGE
DRAWSOM			LDA	#$FF
				STA	COLFLG
				LDY	#$0A	
				JSR	HLINES
				ASL
				ASL
				STA	COLISSN
				LDY	#$08
				JSR	HLINES
				ORA	COLISSN	
				STA	COLISSN	
				PLA
				BNE	YESDOOR
				JMP	NOTDOOR
YESDOOR			LDY	#$28	
				LDA	(XYDATAL),Y
				ASL
				PHA
				SEC
				LDY	#$20
				SBC	(XYDATAL),Y
				STA	ADJMNT2
				PLA
				SEC
				LDY	#$1E	
				SBC	(XYDATAL),Y
				STA	ADJMNT1
				LDY	#$28
				LDA	(XYDATAL),Y
				ASL
				SEC
				SBC	#$16
				PHA
				CLC
				LDY	#$20
				ADC	(XYDATAL),Y
				STA	ADJMNTB
				PLA
				CLC
				LDY	#$1E
				ADC	(XYDATAL),Y
				STA	ADJMNTA
				LDY	#$28
				JSR	POINT
				LDY	#$29
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNT2
				STA	SCRATCH
				JSR	MLINE2
				CMP	#$01
				BNE	CANGO
				ASL
				ORA	COLISSN
				STA	COLISSN
				JMP	CANTGO
CANGO			LDY	#$21
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNT2
				STA	SCRATCH
				JSR	MLINE2
				CMP	#$01
				BEQ	DOBOTTM
				LDY	#$1F
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNT1
				STA	SCRATCH
				JSR	MLINE2
				CMP	#$01
				BEQ	DOBOTTM
				LDA	EDGE
				BEQ	FULL1A
				LDY	#$1F	
				JSR	EXTEND_LR
				JMP	DOBOTTM
FULL1A			LDY	#$1F
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNTA
				STA	SCRATCH
				JSR	MLINE2
				CMP	#$01
				BEQ	DOBOTTM
				LDY	#$21
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNTB
				STA	SCRATCH
				JSR	MLINE2
DOBOTTM			LDY	#$29
				LDX	ADJMNT2
				LDA	(XYDATAL),Y
				JSR	POINT2
				LDY	#$23
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNT2
				STA	SCRATCH
				JSR	MLINE2
				CMP	#$01
				BEQ	BOTDONE
				LDY	#$25
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNT1	
				STA	SCRATCH
				JSR	MLINE2
				CMP	#$01
				BEQ	BOTDONE
				LDA	EDGE
				BEQ	FULL1B
				LDY	#$25	
				JSR	EXTEND_LR
FIN21			LDY	#$29
				LDA	(XYDATAL),Y
				LDX	ADJMNT2
				JSR	POINT2
				LDY	#$29
				JSR	EXTEND_LR
				JMP	CANTGO
FULL1B			LDY	#$25
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNTA
				STA	SCRATCH
				JSR	MLINE2
				CMP	#$01
				BEQ	BOTDONE
				LDY	#$23
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNTB
				STA	SCRATCH
				JSR	MLINE2
BOTDONE			LDA	EDGE
				BNE	FIN21
				LDY	#$29
				LDA	(XYDATAL),Y	
				LDX	ADJMNT2
				JSR	POINT2
				LDY	#$29
				LDA	(XYDATAL),Y	
				TAY
				LDA	ADJMNTB
				STA	SCRATCH
				JSR	MLINE2
				CMP	#$01
				BNE	LASTLIN
				ASL
				ORA	COLISSN
				STA	COLISSN
				JMP	CANTGO
LASTLIN			LDY	#$21
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNTB
				STA	SCRATCH
				JSR	MLINE2
				LDY	#$29
				LDA	(XYDATAL),Y
				LDX	ADJMNTB
				JSR	POINT2
				LDY	#$25
				LDA	(XYDATAL),Y
				TAY
				LDA	ADJMNTB
				STA	SCRATCH
				JSR	MLINE2
				LDY	#$29
				LDA	(XYDATAL),Y
				LDX	ADJMNTB
				JSR	POINT2
				LDY	#$29
				JSR	HSEGEND
				ASL
				ORA	COLISSN
				STA	COLISSN
				JMP	CANTGO
NOTDOOR			LDY	#$28	
				JSR	HLINES
				ASL
				ORA	COLISSN
				STA	COLISSN
CANTGO			CMP	#$07
				BEQ	EXITE	
				LDA	EDGE
				BNE	EXITE
				LDA	COLISSN
				AND	#$02
				BNE	BHIT
				LDY	#$29			;Vertical up
				LDA	#$0B
				JSR	HSEGMENT
				LDY	#$29			;Vertical down
				LDA	#$09
				JSR	HSEGMENT
				JMP	EXITE
BHIT			LDA	COLISSN
				AND	#$40
				BNE	AHIT
				LDY	#$0B
				LDA	#$29
				JSR	HSEGMENT
				JMP	EXITE
AHIT			LDY	#$09
				LDA	#$29
				JSR	HSEGMENT
EXITE			PLA
				TAX
				LDA	#$00
				STA	COLFLG
				RTS

HSEGMENT		PHA
				LDA	(XYDATAL),Y
				LDX	HIDEX
				LDY	HIDEXHI
				JSR	HPOSN
				PLA
				TAY
HSEGEND			LDA	(XYDATAL),Y
				TAY
				LDA	HIDEX
				LDX	HIDEXHI
				JMP	HLIN

HLINES			TYA
				PHA
				JSR	POINT
				PLA
				TAY
				INY
				LDA	(XYDATAL),Y
				TAY
				LDA	HIDEX
				LDX	HIDEXHI
				JMP	HLIN

HLINES2			PHA
				JSR	POINT
				PLA
				TAY
				LDA	(XYDATAL),Y
				TAY
				LDA	HIDEX
				LDX	HIDEXHI
				JMP	HLIN

EXTEND_LR		BIT	LRFLAG
				BPL	EXTENDR
				BMI	EXTENDL			;Always
SEG_EXTENDL		PHA
				JSR	POINT
				PLA
				TAY
EXTENDL			LDA	(XYDATAL),Y		;LOAD Y REGISTER Y COORDINATE
				TAY					;TRANSFER TO Y REGISTER 
				LDX	#$00			;SET X
				TXA					;AND ACCUMULATOR TO ZERO
				JMP	HLIN			;DRAW A LINE
SEG_EXTENDR		PHA
				JSR	POINT
				PLA
				TAY
EXTENDR			LDA	(XYDATAL),Y		;LOAD Y COORDINATE
				TAY					;TRANSFER TO Y REGISTER
				LDX	#$01			;LOAD X AND ACCUMULATOR
				LDA	#$16			;WITH 278
				JMP	HLIN			;DRAW A LINE

***K-SEGMENT-DRAWING-ROUTINE***
D2K_DRAW		JSR	D2_DRAW
K_DRAW			TXA
				PHA
				LDA	DEPTH
				BNE	NOTOFF
				JMP	OFFEDGE
NOTOFF			LDY	#$28
				LDA	(XYDATAL),Y
				STA	HIDEX
				LDA	#$00
				STA	HIDEXHI
				ASL	HIDEX
				ROL	HIDEXHI
				LDY	#$08
				LDA	(XYDATAL),Y
				TAY
				LDA	HIDEX
				STY	HIDEX
				SEC
				SBC	HIDEX
				STA	HIDEX
				LDA	#$00
				STA	HIDEXHI
				LDA	LRFLAG
				CMP	#$0F
				BNE	NORCALC
				LDA	#$17
				SEC
				SBC	HIDEX
				STA	HIDEX
				LDA	#$01
				SBC	HIDEXHI
				STA	HIDEXHI
NORCALC			LDA	#$FF
				STA	COLFLG
				LDA	#$03	
				STA	FREE1+1
				LDY	#$28
				LDA	#$0B
				JSR	HLINES2
				LDY	#$28
				LDA	#$09
				JSR	HLINES2
				LDA	#$01
				STA	FREE1+1
				LDY	#$0A
				JSR	HLINES
				LDY	#$08
				JSR	HLINES
				JMP	EXITK
OFFEDGE			LDA	LRFLAG
				CMP	#$0F
				BEQ	OFFRGHT
				LDY	#$0A
				LDA	#$0B
				JSR	SEG_EXTENDL
				LDY	#$08
				LDA	#$09
				JSR	SEG_EXTENDL
				LDY	#$28
				JSR	POINT
				LDY	#$24
				LDA	#$00
				TAX
				JSR	HLIN
				LDY	#$28
				JSR	POINT
				LDY	#$A0
				LDA	#$00
				TAX
				JSR	HLIN
				JMP	EXITK
OFFRGHT			LDY	#$0A
				LDA	#$0B
				JSR	SEG_EXTENDR
				LDY	#$08
				LDA	#$09
				JSR	SEG_EXTENDR
				LDY	#$28
				JSR	POINT
				LDY	#$24
				LDA	#$17
				LDX	#$01
				JSR	HLIN
				LDY	#$28
				JSR	POINT
				LDY	#$A0
				LDA	#$17
				LDX	#$01
				JSR	HLIN
EXITK			LDA	#$00
				STA	COLFLG
				PLA
				TAX
				RTS

***V-SEGMENT-DRAWING-ROUTINE***
EV_DRAW			JSR	E_DRAW
V_DRAW			LDA	#$FF
				STA	COLFLG
				LDY	#$28
				LDA	(XYDATAL),Y
				TAX
				LSR
				BCS	GREENED
				DEX
GREENED			LDA	DEPTH
				BNE	GREEND2
				INX
				INX
GREEND2			TXA
				PHA
				LDY	#$29	
				LDA	(XYDATAL),Y
				JSR	POINT2
				PLA
				PHA
				STA	SCRATCH
				LDY	#$0B
				LDA	(XYDATAL),Y
				TAY
				JSR	MLINE2
				PLA
				PHA
				TAX
				LDY	#$29
				LDA	(XYDATAL),Y
				JSR	POINT2
				PLA
				STA	SCRATCH
				LDY	#$09
				LDA	(XYDATAL),Y
				TAY
				JSR	MLINE2
				LDA	#$00
				STA	COLFLG
				RTS

***BEGINNING-OF-SIDE-DOOR-DRAWING-SUBROUTINE***
DOORDRW			TXA
				PHA
				LDY	#$10			;DRAW POINT 9 
				JSR	POINT
				LDY	#$12			;TO 10
				JSR	MLINE
				LDY	#$14			;TO 11
				JSR	MLINE
				LDY	#$16			;TO 12
				JSR	FAST_VLINE
				LDY	#$18			;TO 13
				JSR	MLINE
				LDY	#$1A			;TO 14
				JSR	MLINE
				LDA	DEPTH	
				BEQ	PULLOUT
				LDY	#$10			;FROM 9
				JSR	POINT
				LDY	#$0E			;TO 8
				JSR	MLINE
				LDY	#$1C			;TO 15
				JSR	FAST_VLINE
				LDY	#$1A			;TO 14
				JSR	MLINE
PULLOUT			PLA
				TAX
				RTS
***END-OF-SIDE-DOOR-DRAWING-SUBROUTINE***

***BEGINNING-OF-POINT-DRAWING-SUBROUTINE***
POINT			LDA	(XYDATAL),Y		;LOAD X COORDINATE
				TAX					;AND MOVE TO X REGISTER 
				INY
				LDA	(XYDATAL),Y		;LOAD Y COORDINATE
POINT2			PHA					;AND PUSH IT
				LDA	LRFLAG
				LSR					;IS THIS DRAWN ON THE LEFT OR RIGHT?
				BCC	DOLEFT			;LEFT, THEN SKIP
				TXA					;SUBTRACT X COORDINATE FROM 279
				STA	SCRATCH
				LDA	#$16	
				SEC
				SBC	SCRATCH
				TAX
				LDA	#$01
				SBC	#$00
				TAY
				PLA					;PULL Y COORDINATE
				JMP	HPOSN
DOLEFT			PLA					;PULL Y COORDINATE
				LDY	#$00			;CLEAR HIGH BYTE OF X COORDINATE
				JMP	HPOSN			;JUMP TO HPSON ROUTINE

LEFT_POINT		LDA	(XYDATAL),Y		;LOAD X COORDINATE
				TAX					;AND MOVE TO X REGISTER 
				INY
				LDA	(XYDATAL),Y		;LOAD Y COORDINATE
				LDY	#0
				JMP	HPOSN

***BEGINNING-OF-LINE-DRAWING-SUBROUTINE***
RIGHT_MLINE		LDA	#$16			;SUBTRACT X COORDINATE FROM 278
				SEC
				SBC	(XYDATAL),Y		;LOAD X COORDINATE
				STA	SCRATCH
				LDA	#$01
				SBC	#$00
				TAX
				INY	
				LDA	(XYDATAL),Y		;Put Y coordinate
				TAY					; into Y register
				LDA	SCRATCH
				JMP	HLIN

SEGMENT			PHA
				JSR	POINT
				PLA
				TAY
MLINE			LDA	(XYDATAL),Y		;LOAD X COORDINATE
				STA	SCRATCH
				INY	
				LDA	(XYDATAL),Y		;LOAD Y COORDINATE
				TAY					;MOVE TO Y REGISTER
MLINE2			LDA	LRFLAG
				LSR					;IS THIS DRAWN ON THE RIGHT OR LEFT?
				BCC	LEFTDO			;LEFT, THEN SKIP
				LDA	#$16			;SUBTRACT X COORDINATE FROM 278 
				SEC
				SBC	SCRATCH
				STA	SCRATCH
				LDA	#$01
				SBC	#$00
				TAX
				LDA	SCRATCH
				JMP	HLIN
LEFTDO			LDA	SCRATCH
				LDX	#$00
				JMP	HLIN

FAST_VLINE		INY
				LDA	(XYDATAL),Y
				STA	SCRATCH
				LDX	YCRD
:1				LDA	LOBYTES,X
				STA	SCREENL
				LDA	HIBYTES,X
				ORA	PAGE
				STA	SCREENH
				LDY	HNDX
				LDA	COLOR
				EOR	(SCREENL),Y
				AND	HMASK
				EOR	(SCREENL),Y
				STA	(SCREENL),Y
				CPX	SCRATCH
				STX	YO
				STX	YCRD
				INX
				BCC	:1
				RTS

MOTHER_MAP		DB	$3F,$FF,$FF
				DB	$C0,$C0,$0C
				DB	$20,$C0,$00
				DB	$F3,$30,$00
				DB	$C3,$33,$C0
				DB	$C0,$00,$C0
				DB	$80,$00,$C3
				DB	$33,$C0,$C0
				DB	$0F,$3C,$00
				DB	$00,$F0,$FF
				DB	$C0,$C0,$30
				DB	$33,$00,$00
				DB	$C0,$0B,$C0
				DB	$C0,$30,$3F
				DB	$C0,$00,$F0
				DB	$C0,$00,$C0
				DB	$3F,$00,$C0
				DB	$00,$CF,$C3
				DB	$C0,$C0,$0C
				DB	$B0,$80,$00
				DB	$F3,$F3,$C0
				DB	$C0,$00,$EF
				DB	$0C,$00,$F0
				DB	$C0,$FC,$C0
				DB	$0C,$30,$38
				DB	$00,$EC,$30
				DB	$0C,$C0,$3C
				DB	$03,$F0,$00
				DB	$C0,$3C,$3C
				DB	$C0,$00,$F8
				DB	$0B,$C0,$C3
				DB	$0C,$30,$C0
				DB	$3F,$FF,$FF
				DB	$C0
