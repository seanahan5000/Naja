
; - draw "DO YOU WANT TO INSERT ORBS?" as text
;		instead of LOADER image data
; - add ERR to prevent page crossing in WAIT
; - get EXPANDR2 equate from NCOM.VARS.S

EXPANDR2		=	$0C63			;expand without $00 transparency
TBLPNTL			=	$0D
TBLPNTH			=	$0E

DESTINL			EQU	$0D
LOADL			EQU	$0D
DATAL			EQU	$0D
DESTINH			EQU	$0E
LOADH			EQU	$0E
DATAH			EQU	$0E
POINTER			EQU	$11
HOLDER			EQU	$11
LASTROW			EQU	$11
STARTCOL		EQU	$11		; DRAW_DOOR
NUMUP			EQU	$12
FRSTROW			EQU	$12
ENDCOL			EQU	$12		; DRAW_DOOR
ENDSAVE			EQU	$13
FRSTLIN			EQU	$13
ENDLINE			EQU	$13		; DRAW_DOOR
LINENUM			EQU	$14
INDEX			EQU	$14		; DRAW_DOOR
BYTENUM			EQU	$15
FROMCNT			EQU	$16
TOCNT			EQU	$17
SCREENL			EQU	$26
SCREENH			EQU	$27
PAGE			EQU	$E6		; DRAW_DOOR
LOBYTES			EQU	$0800
HIBYTES			EQU	$08C0
KEYBRD			EQU	$C000
UNSTROB			EQU	$C010
CLICK			EQU	$C030
BEGLINS			EQU	$58
ENDLINS			EQU	$66
LINEBEG			EQU	$B7
LINEEND			EQU	$BF
ROWBEG			EQU	$08
ROWEND			EQU	$1F

				ORG	$8000

				LDA	#$20
				STA	PAGE
				JSR	DRAW_DOOR
				
				JSR	SWITCH
ASKER			BIT	KEYBRD
				BPL	ASKER
				LDA	KEYBRD
				BIT	UNSTROB
				CMP	#$D9
				BNE	YNO
				JSR	SWITCH
				LDY	#$02	
GOAGAIN			LDA	#$FF	
				JSR	WAIT
				DEY
				BNE	GOAGAIN
				JMP	ORBS
YNO				CMP	#$CE
				BNE	ASKER
				JSR	SWITCH
				RTS

SWITCH			LDA	#LINEBEG
				STA	LINENUM
				LDA	#$00
				STA	BYTENUM
POINT1			LDX	LINENUM
				LDA	LOBYTES,X
				STA	SCREENL
				LDA	HIBYTES,X
				ORA	#$20
				STA	SCREENH
				LDX	#ROWBEG	
POINT2			LDY	BYTENUM
				LDA	LOADER,Y
				PHA
				TXA
				TAY
				LDA	(SCREENL),Y
				STA	HOLDER
				PLA
				STA	(SCREENL),Y
				LDY	BYTENUM
				LDA	HOLDER
				STA	LOADER,Y
				INC	BYTENUM
				CPX	#ROWEND
				BEQ	LINNEXT
				INX
				JMP	POINT2
LINNEXT			LDA	LINENUM
				CMP	#LINEEND
				BEQ	EXIT
				INC	LINENUM
				JMP	POINT1
EXIT			RTS

ORBS			LDA	#$00
				STA	BYTENUM
				STA	POINTER
				LDA	#<LODPNT
				STA	LOADL
				LDA	#>LODPNT
				STA	LOADH
LOOP1A			LDA	#BEGLINS
				STA	LINENUM
LOOP1B			LDX	LINENUM
				LDA	LOBYTES,X
				STA	SCREENL
				LDA	HIBYTES,X
				ORA	#$20
				STA	SCREENH
				LDY	POINTER
				LDX	BEGROWS,Y	
LOOP2			LDY	BYTENUM
				LDA	(LOADL),Y
				PHA
				TXA
				TAY
				PLA
				STA	(SCREENL),Y	
				INC	BYTENUM
				LDY	POINTER
				TXA
				CMP	ENDROWS,Y
				BEQ	NEXTLIN
				INX
				JMP	LOOP2
NEXTLIN			LDA	LINENUM
				CMP	#ENDLINS
				BEQ	NEXTPIC
				INC	LINENUM
				JMP	LOOP1B	
NEXTPIC			LDA	LOADL
				CLC
				ADC	BYTENUM
				STA	LOADL
				LDA	#$00
				STA	BYTENUM
				ADC	LOADH
				STA	LOADH
				JSR	SOUND
				LDY	#$03
REPEAT			LDA	#$FF	
				JSR	WAIT
				DEY
				BNE	REPEAT
				LDA	POINTER
				CMP	#$04
				BNE	NOLEAVE
				JMP	HATCHES	
NOLEAVE			INC	POINTER
				JMP	LOOP1A

SOUND			LDX	#$30	
AGAIN1			LDY	#$10	
AGAIN2			PHA	
				PLA
				DEY
				BNE	AGAIN2
				BIT	CLICK
				DEX
				BNE	AGAIN1
				RTS

BEGROWS			DFB	$06,$0C
				DFB	$12,$18
				DFB	$1E
ENDROWS			DFB	$09,$0F
				DFB	$15,$1B
				DFB	$21

HATCHES			LDA	#$05
				STA	FRSTROW
				LDA	#$0A
				STA	LASTROW
				LDA	#<DATBEG
				STA	DATAL
				LDA	#>DATBEG
				STA	DATAH
SPOT1A			LDA	#$6F
				STA	FRSTLIN
SPOT1B			LDA	#$00
				STA	BYTENUM
				LDA	FRSTLIN
				STA	LINENUM
SPOT2			LDX	LINENUM
				LDA	LOBYTES,X
				STA	SCREENL
				LDA	HIBYTES,X
				ORA	#$20
				STA	SCREENH
				LDX	FRSTROW
SPOT3			LDY	BYTENUM
				LDA	(DATAL),Y
				PHA
				TXA
				TAY
				PLA
				STA	(SCREENL),Y
				LDA	CLICK
				LDA	CLICK
				INC	BYTENUM
				CPX	LASTROW
				BEQ	LINOVER
				INX	
				JMP	SPOT3
LINOVER			LDA	LINENUM
				CMP	#$6F
				BEQ	NEXTONE
				INC	LINENUM
				JMP	SPOT2
NEXTONE			LDA	#$50	
				JSR	WAIT
				LDA	FRSTLIN
				CMP	#$50
				BEQ	ONEDONE
				DEC	FRSTLIN
				JMP	SPOT1B
ONEDONE			LDA	#$FF
				JSR	WAIT
				LDA	LASTROW
				CMP	#$22
				BEQ	PANELS
				CLC
				ADC	#$06
				STA	LASTROW
				LDA	FRSTROW
				CLC
				ADC	#$06
				STA	FRSTROW
				LDA	DATAL
				CLC	
				ADC	BYTENUM
				STA	DATAL
				LDA	#$00
				ADC	DATAH
				STA	DATAH
				JMP	SPOT1A

PANELS			JSR	UPA
				JSR	DOWNA
				JSR	UPG
				JSR	DOWNG
				JSR	UPB
				JSR	DOWNB
				JSR	UPC
				JSR	DOWNC
				JSR	UPD
				JSR	DOWND
				JSR	UPE
				JSR	DOWNE
				JSR	UPF
				JSR	DOWNF
				JMP	PANELS

UPA				NOP
				LDY	#$00
				JSR	UP2
				CMP	#$01
				BNE	NOENDAU
				LDA	#$60
				STA	UPA
NOENDAU			RTS

DOWNA			NOP
				LDY	#$01
				JSR	DOWN2
				CMP	#$BE
				BNE	NOENDAD
				LDA	#$60
				STA	DOWNA
NOENDAD			RTS

UPG				NOP
				LDY	#$0C	
				JSR	UP2
				CMP	#$01
				BNE	NOENDGU
				LDA	#$60
				STA	UPG
NOENDGU			RTS

DOWNG			NOP
				LDY	#$0D
				JSR	DOWN2
				CMP	#$BE
				BNE	NOENDGD
				LDA	#$60
				STA	DOWNG
NOENDGD			RTS

UPB				NOP
				LDY	#$02
				JSR	UP1
				CMP	#$00	
				BNE	NOENDBU
				LDA	#$60
				STA	UPB
NOENDBU			RTS

DOWNB			NOP
				LDY	#$03
				JSR	DOWN1
				CMP	#$BF	
				BNE	NOENDBD
				LDA	#$60
				STA	DOWNB
NOENDBD			RTS

UPC				NOP
				LDY	#$04
				JSR	UP1
				CMP	#$00			
				BNE	NOENDCU
				LDA	#$60
				STA	UPC
NOENDCU			RTS

DOWNC			NOP
				LDY	#$05
				JSR	DOWN1
				CMP	#$BF	
				BNE	NOENDCD
				LDA	#$60
				STA	DOWNC
NOENDCD			RTS

UPD				NOP
				LDY	#$06
				JSR	UP1
				CMP	#$00	
				BNE	NOENDDU
				LDA	#$60
				STA	UPD
NOENDDU			RTS

DOWND			NOP
				LDY	#$07
				JSR	DOWN1
				CMP	#$BF	
				BNE	NOENDDD
				LDA	#$60
				STA	DOWND
NOENDDD			RTS

UPE				NOP
				LDY	#$08
				JSR	UP1
				CMP	#$00	
				BNE	NOENDEU
				LDA	#$60
				STA	UPE
NOENDEU			RTS

DOWNE			NOP
				LDY	#$09
				JSR	DOWN1
				CMP	#$BF	
				BNE	NOENDED
				LDA	#$60
				STA	DOWNE
NOENDED			RTS

UPF				NOP
				LDY	#$0A
				JSR	UP1
				CMP	#$00	
				BNE	NOENDFU
				PLA
				PLA
NOENDFU			RTS

DOWNF			NOP
				LDY	#$0B
				JSR	DOWN1
				CMP	#$BF	
				BNE	NOENDFD
				LDA	#$60
				STA	DOWNF
NOENDFD			RTS

BEGROW			DFB	$00,$00
				DFB	$05,$05
				DFB	$0B,$0B
				DFB	$11,$11
				DFB	$17,$17
				DFB	$1D,$1D
				DFB	$23,$23
ENDROW			DFB	$04,$04
				DFB	$0A,$0A
				DFB	$10,$10
				DFB	$16,$16
				DFB	$1C,$1C
				DFB	$22,$22
				DFB	$27,$27
ENDLINES		DFB	$5F,$60	
				DFB	$87,$88	
				DFB	$37,$38	
				DFB	$87,$88	
				DFB	$37,$38	
				DFB	$87,$88	
				DFB	$5F,$60

UP1				LDA	#$01
				STA	NUMUP
				JMP	STARTUP
UP2				LDA	#$02
				STA	NUMUP
STARTUP			STY	POINTER
				JSR	UPWAIT
				LDA	NUMUP
				STA	FROMCNT
				SEC
				SBC	ENDLINES,Y
				CMP	#$01
				BNE	CONTINU
				LDA	ENDLINES,Y
				JMP	FINISH
CONTINU			LDA	#$00	
				STA	TOCNT
LOOPA			LDX	FROMCNT
				LDA	LOBYTES,X
				STA	SCREENL
				LDA	HIBYTES,X
				ORA	#$20
				STA	SCREENH
				LDX	TOCNT
				LDA	LOBYTES,X
				STA	DESTINL
				LDA	HIBYTES,X
				ORA	#$20
				STA	DESTINH
				LDA	ENDROW,Y
				STA	ENDSAVE
				LDA	BEGROW,Y
				TAY
LOOPB			LDA	(SCREENL),Y
				STA	(DESTINL),Y
				CPY	ENDSAVE
				BEQ	SKIP1
				INY
				JMP	LOOPB
SKIP1			LDY	POINTER
				LDA	ENDLINES,Y	
				CMP	FROMCNT	
				BEQ	FINISH
				INC	FROMCNT
				INC	TOCNT
				JMP	LOOPA
FINISH			PHA	
				LDA	ENDLINES,Y
				SEC
				SBC	NUMUP
				STA	ENDLINES,Y
				STA	TOCNT
				INC	TOCNT
				LDA	NUMUP
				STA	FROMCNT
LOOPC			LDX	TOCNT
				LDA	LOBYTES,X
				STA	DESTINL
				STA	SCREENL
				LDA	HIBYTES,X
				PHA
				ORA	#$20
				STA	DESTINH	
				PLA
				ORA	#$40
				STA	SCREENH	
				LDA	ENDROW,Y
				STA	ENDSAVE
				LDA	BEGROW,Y
				TAY
LOOPD			LDA	(SCREENL),Y
				STA	(DESTINL),Y
				CPY	ENDSAVE	
				BEQ	SKIP2
				INY
				JMP	LOOPD
SKIP2			LDA	FROMCNT
				CMP	#$01
				BEQ	DONE
				DEC	FROMCNT
				INC	TOCNT
				LDY	POINTER
				JMP	LOOPC
DONE			PLA	
				RTS

DOWN1			LDA	#$01
				STA	NUMUP
				JMP	STARTDN
DOWN2			LDA	#$02
				STA	NUMUP
STARTDN			STY	POINTER
				JSR	DWNWAIT
				LDA	#$BF
				STA	TOCNT
				SEC
				SBC	NUMUP
				STA	FROMCNT	
				LDA	#$BF
				SEC
				SBC	ENDLINES,Y
				CMP	NUMUP
				BCS	LOOPE	
				LDA	ENDLINES,Y
				JMP	FINISH2
LOOPE			LDX	FROMCNT
				LDA	LOBYTES,X
				STA	SCREENL
				LDA	HIBYTES,X
				ORA	#$20
				STA	SCREENH
				LDX	TOCNT
				LDA	LOBYTES,X
				STA	DESTINL
				LDA	HIBYTES,X
				ORA	#$20
				STA	DESTINH
				LDA	ENDROW,Y
				STA	ENDSAVE
				LDA	BEGROW,Y
				TAY
LOOPF			LDA	(SCREENL),Y
				STA	(DESTINL),Y
				CPY	ENDSAVE
				BEQ	SKIP3
				INY
				JMP	LOOPF
SKIP3			LDY	POINTER
				LDA	ENDLINES,Y
				CMP	FROMCNT
				BEQ	FINISH2
				DEC	FROMCNT
				DEC	TOCNT
				JMP	LOOPE
FINISH2			PHA
				LDA	ENDLINES,Y
				CLC	
				ADC	NUMUP
				STA	ENDLINES,Y
				STA	TOCNT
				DEC	TOCNT
				LDA	NUMUP
				STA	FROMCNT
LOOPG			LDX	TOCNT
				LDA	LOBYTES,X
				STA	DESTINL
				STA	SCREENL
				LDA	HIBYTES,X
				PHA
				ORA	#$20
				STA	DESTINH
				PLA
				ORA	#$40
				STA	SCREENH
				LDA	ENDROW,Y
				STA	ENDSAVE
				LDA	BEGROW,Y
				TAY
LOOPH			LDA	(SCREENL),Y
				STA	(DESTINL),Y
				CPY	ENDSAVE
				BEQ	SKIP4
				INY
				JMP	LOOPH
SKIP4			LDA	FROMCNT
				CMP	#$01
				BEQ	DONE2	
				DEC	FROMCNT
				DEC	TOCNT
				LDY	POINTER
				JMP	LOOPG
DONE2			PLA
				RTS

UPWAIT			LDA	#$87
				SEC
				SBC	ENDLINES,Y
				PHA
				JMP	COMMON
DWNWAIT			LDA	ENDLINES,Y
				SEC
				SBC	#$38
				PHA
COMMON			LDA	NUMUP
				CMP	#$01
				BEQ	WAITER
				PLA
				LSR	A
				PHA
				LDA	NUMUP
				CMP	#$02
				BEQ	WAITER
				PLA
				LSR	A
				PHA
WAITER			PLA
				TAX	
LOOPER			CPX	#$00
				BEQ	OUT
				BIT	CLICK
				LDA	#$02	
				JSR	WAIT	
				DEX	
				JMP	LOOPER
OUT				RTS

WAIT			SEC
WAIT2			PHA
WAIT3			SBC	#$01
				BNE	WAIT3
				PLA
				SBC	#$01
				BNE	WAIT2
				RTS
;
; Programmatically generate orb door
;
DRAW_DOOR
; draw vertical stripes
				LDX	#$00
:1				LDA	LOBYTES,X
				STA	SCREENL
				LDA	HIBYTES,X
				ORA	PAGE
				STA	SCREENH
				LDY	#39
:2				LDA	DOOR_STRIPES,Y
				STA	(SCREENL),Y
				DEY
				BPL	:2
				INX
				CPX	#192
				BNE	:1

; put in horizontal break lines
DRAW_BREAKS		LDX	#$00
:1				STX	INDEX
				LDA	BREAK_COLUMNS,X
				STA	STARTCOL
				LDA	BREAK_COLUMNS+1,X
				STA	ENDCOL
				LDA	BREAK_LINES,X
				TAX
				CLC
				ADC	#$02
				STA	ENDLINE
:2				LDA	LOBYTES,X
				STA	SCREENL
				LDA	HIBYTES,X
				ORA	PAGE
				STA	SCREENH
				LDY	STARTCOL
:3				LDA	DOOR_BREAKS,Y
				STA	(SCREENL),Y
				INY
				CPY	ENDCOL
				BNE	:3
				INX
				CPX	ENDLINE
				BNE	:2
				LDX	INDEX
				INX
				CPX	#7
				BNE	:1
				
; draw the five orb pedestals
DRAW_PEDS		LDX	#0
:1				LDA	PED_PATTERN+0,X
				STA	TBLPNTL
				LDA	PED_PATTERN+1,X
				STA TBLPNTH
				LDY	#2
				LDA	PED_PATTERN+2,X
				STA (TBLPNTL),Y
				INY
				LDA	PED_PATTERN+3,X
				STA (TBLPNTL),Y
				TXA
				CLC
				ADC	#4
				PHA
				JSR	EXPANDR2
				PLA
				TAX
				CPX	#20
				BNE	:1
				RTS
				
DOOR_STRIPES	HEX	ABD5AAD5BAABD5AAD5AAF5562A552A553AABD5AA
				HEX	D5AAF5562A552A553AABD5AAD5AAF5D6AAD5AAB5

BREAK_LINES		DB	95,135,55,135,55,135,95
BREAK_COLUMNS	DB	0,5,11,17,23,29,35,40

DOOR_BREAKS		HEX	7F7F7F7FBF
				HEX	FFFFFFFFFFFF
				HEX	7E7F7F7F7F3F
				HEX	FFFFFFFFFFFF
				HEX	7E7F7F7F7F3F
				HEX	FFFFFFFFFFFF
				HEX	FE7F7F7FBF

PED_PATTERN		DW	BLUE_PEDESTAL
				DB	5,10
				DW	GREEN_PEDESTAL
				DB	11,16
				DW	BLUE_PEDESTAL
				DB	17,22
				DW	GREEN_PEDESTAL
				DB	23,28
				DW	BLUE_PEDESTAL
				DB	29,34

BLUE_PEDESTAL	HEX	4F70050AF7F7F7FE1CF6F7F7F7FF80C0E1B0988FFE048C89
				HEX	8383FE0687838389FE048C8F98B0E0C080FFFF8080FFBF8F
				HEX	F7878787BFFBE0C0FE0580C0E0E0E0A0808080FFFE0580FF
				HEX	FF8080FFFFFCFBF8F8F8FFF781FE0780FE0481808080FFFE
				HEX	0580FFFF8080E18386FCFE048CE4F0F0FE05B8F8F0F0E4FE
				HEX	048CFC8683818080FFFBBBFBDBFE1A9BDBFBBBFB

GREEN_PEDESTAL	HEX	4F700B10FE223B7F00406130180FFE040C090303FE060703
				HEX	0309FE040C0F18306040007F7F00007F3F0F770707073F7B
				HEX	6040FE0600406060200000007FFE05007F7F00007F7F7C7B
				HEX	7878787F7701FE08000101010000007FFE05007F7F000161
				HEX	0306FCFE040C647070FE0638707064FE040C7C0603010100
				HEX	7FFE0476FE1B36767676
