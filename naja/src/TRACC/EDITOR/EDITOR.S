*==============================================*
*                                              *
*                 ALIEN EDITOR                 *
*                                              *
*                   10/3/87                    *
*                                              *
*==============================================*
				LST	OFF
				ERR	($310)-$AA
				TR	ON
				EXP	OFF

				USE	/NAJA/VARS/MACROS
				PUT	/NAJA/VARS/CONSTANTS
				PUT	/NAJA/VARS/ZPAGE
				PUT	/NAJA/VARS/CAMP.VARS
				PUT	/NAJA/VARS/NCOM.VARS
				PUT	/NAJA/VARS/MISC.VARS
				PUT	/NAJA/VARS/THALL.VARS
				PUT	/NAJA/VARS/FIGHT.CONSTS
				PUT	/NAJA/VARS/NDOS.VARS

SCRATCH			=	$00
MINCURS			=	$01
MAXCURS			=	$02
COUNTER			=	$03
SECTOR			=	$16				;**
SECOUNT			=	$17				;**
CHOLD1			=	$0A
CHOLD2			=	$0B
CHOLD3			=	$0C

NUMBER			=	ZBLOCK_60+0
XSPOT			=	ZBLOCK_60+1
MAXNUMB			=	ZBLOCK_60+2
COUNTX			=	ZBLOCK_60+3
COUNTY			=	ZBLOCK_60+4
DATPNTL			=	ZBLOCK_60+5
DATPNTH			=	ZBLOCK_60+6
*

MAIN_BUFFER		=	$6000

				ORG	$8800

*** SOMETHING HAS TO PRESERVE DISK_SIDE BEFORE
***   COMING IN HERE
				BIT	UNSTROB

*-------------------------------

GET_SHELL		JSR	CLEAR1
				LDY	#$11
				JSR	TEXTER
				LDX	#<GETSHELL_DEF
				LDY	#>GETSHELL_DEF
				JSR	INIT_CURSOR
				JSR	GETKEY
				LDX	CURSOR
				CPX	#5
				BNE	:SKIPA
**** THEY WANT TO LEAVE
*** REMEMBER TO RESTORE DISK SIDE

:SKIPA			INX
				STX	SHELL_NUMBER
				LDY	#side_F1
				CPX	#3
				BCC	:SKIPB
				INY
:SKIPB			STY	DISK_SIDE
				JSR	LOADSUB
				JMP	GOT_SHELL

*-------------------------------

GETSHELL_DEF	DB	$05
				DB	$80
				DW	:SHELL_CURS

:SHELL_CURS		LDX	CURSOR
				LDY	:YPNTS,X
				LDX	#86
				JMP	ARROWER
:YPNTS			DB	76,84,92
				DB	100,108,116

*-------------------------------

GOT_SHELL		LDA	#$01
				STA	NUMBER
				JSR	TO_BUFFER
				JSR	CLEAR1
				LDY	#$00
				JSR	TEXTER
				LDA	#$28
				STA	YPNT
				LDA	#$D4
				STA	XPNT
				LDA	#0
				JSR	SPCHARS
				LDA	#$30
				STA	YPNT
				LDA	#$CF
				STA	XPNT
				LDA	#1
				JSR	SPCHARS
				JSR	ALLDATA
				LDA	#GREEN
				STA	COLOR
				LDY	#$00
				JSR	LINER
				LDY	#$03
				JSR	TEXTER
				JSR	SHOWNUM
				LDA	#VIOLET
				STA	COLOR
				LDY	#$01
				JSR	LINER
				LDY	#$04
				JSR	TEXTER
				JSR	GRID_DRAW
				LDA	#$00
				STA	CHOLD1
				STA	CHOLD2
				STA	CHOLD3
				INC	CHOLD1
				INC	CHOLD2
SCREEN1			LDA	#$20
				STA	PAGE
				LDA	CHOLD1
				STA	CURSOR
				LDA	#$8D
				STA	XPNT
				JSR	CDRAW1
				LDA	#$01
				STA	MINCURS
				LDA	#$17	
				STA	MAXCURS
REKEY1			JSR	KEYSUB1
				JSR	CHECK_LEFT
				BEQ	LRCOMN1
				JSR	CHECK_RIGHT
				BNE	NOTLR
LRCOMN1			PHA
				JSR	CDRAW1
				LDA	CURSOR	
				STA	CHOLD1
				JSR	ALLDATA
				JSR	SHOWNUM
				JSR	FROM_BUFFER
				PLA
				JSR	CHECK_RIGHT
				BEQ	FORWARD
				DEC	NUMBER
				BNE	LRCOMN2
				LDA	MAXNUMB
				STA	NUMBER
				BNE	LRCOMN2
FORWARD			LDA	NUMBER
				INC	NUMBER
				CMP	MAXNUMB
				BCC	LRCOMN2
				LDA	#$01
				STA	NUMBER
LRCOMN2			JSR	SHOWNUM
				JSR	TO_BUFFER
				JSR	ALLDATA
				JMP	SCREEN1

NOTLR			LDX	#5
:LOOP1			CMP	CMDS,X
				BEQ	:SKIPA
				DEX
				BPL	:LOOP1
				JMP	REKEY1
:SKIPA			TXA
				ASL
				TAX
				LDA	CMD_ADRS+1,X
				PHA
				LDA	CMD_ADRS,X
				PHA
				RTS

CMDS			ASC	"RELSG "
CMD_ADRS		DW	REDO_IT-1
				DW	EXIT_IT-1
				DW	LOAD_IT-1
				DW	SAVE_IT-1
				DW	GOTO_IT-1
				DW	ENTER_IT-1

REDO_IT			JSR	ARESURE
				CPX	#$FF
				BEQ	GOREK1
				JSR	ALLDATA
				JSR	TO_BUFFER
				JSR	ALLDATA
				LDA	#$01	
				STA	CURSOR
				JSR	CDRAW1
GOREK1			JMP	REKEY1

EXIT_IT			LDY	#$06
				JSR	TEXTER
				JSR	ARESURE
				TXA
				PHA
				LDY	#$06
				JSR	TEXTER
				PLA
				CMP	#$FF
				BEQ	GOREK1
				JMP	EXITLOAD

LOAD_IT			JSR	ARESURE
				CPX	#$FF
				BEQ	GOREK1
				JMP	GET_SHELL

SAVE_IT			JSR	ARESURE
				CPX	#$FF
				BEQ	GOREK1
				JSR	FROM_BUFFER
				JSR	SAVESUB
				JMP	SCREEN1

GOTO_IT			JSR	CDRAW1
				LDY	#$08
				JSR	TEXTER
				LDA	#$02
				STA	MAXTEXT
				JSR	INPUT2
				JSR	PRECON
				LDA	#253
				LDY	#136
				JSR	LINE
				JSR	CNVERT
				CPX	#$FF
				BEQ	BADJUMP
				CMP	MAXNUMB
				BEQ	OKJUMP
				BCS	BADJUMP
				CMP	#$00
				BEQ	BADJUMP
OKJUMP			PHA
				LDY	#$08
				JSR	TEXTER
				JSR	SHOWNUM
				JSR	FROM_BUFFER
				JSR	ALLDATA
				PLA
				STA	NUMBER
				JSR	SHOWNUM
				JSR	TO_BUFFER
				JSR	ALLDATA
				LDA	#$01	
				STA	CURSOR
				JSR	CDRAW1
				JMP	REKEY1
BADJUMP			LDY	#$08
				JSR	TEXTER
				JSR	CDRAW1
				JMP	REKEY1

ENTER_IT		LDA	#$02
				STA	MAXTEXT
				LDA	#$A8
				STA	XSPOT	
				LDA	CURSOR
				CMP	#$01
				BEQ	NAMEIN
				CMP	#$13	
				BEQ	GOWORDS
				CMP	#$14	
				BEQ	GOFIGHT	
				CMP	#$17	
				BEQ	GOGROUP
				CMP	#$0D	
				BNE	GONORML
				LDA	#$04
				STA	MAXTEXT
				LDA	#$B4	
				STA	XSPOT	
GONORML			JMP	NORMSUB
GOFIGHT			JMP	SCREEN2
GOGROUP			JMP	GROUPING
GOWORDS			JMP	WORDER

*===============================
*
*===============================

NAMEIN			JSR	NAMESUB
				LDA	#$10
				STA	MAXTEXT
				LDA	#$96
				LDY	#$08
				JSR	INPUT
				LDY	#$00
NALOOP1			LDA	TEXTBUF,Y
				CMP	#$8D
				BEQ	FORGETN
				CMP	#" "
				BNE	OKAY1
				INY
				BNE	NALOOP1
OKAY1			LDY	#$00
NALOOP2			LDA	TEXTBUF,Y
				CMP	#$8D
				BEQ	OKAY2
				JSR	CONVERT
				TXA
				STA	BUFF64,Y
				INY
				BNE	NALOOP2
OKAY2			CPY	#$10
				BEQ	OKAY3
				LDA	#$0A
				STA	BUFF64,Y
				INY
				BNE	OKAY2
OKAY3			JMP	REKEY1

FORGETN			JSR	NAMESUB
				JMP	REKEY1

*===============================
*
*===============================

NORMSUB			JSR	GREATER
				JSR	INPUT2
				JSR	PRECON
				LDY	CURSOR
				LDA	TABLE8,Y
				TAY
				LDA	XSPOT	
				CLC
				ADC	#$06
				JSR	LINE
				JSR	CNVERT
				PHA
				TXA
				PHA
				JSR	GREATER
				PLA
				TAX
				PLA
				CPX	#$FF
				BEQ	FORGET
				PHA
				LDA	MAXTEXT
				CMP	#$04
				BNE	GOOD1
				LDA	TEXTBUF+2
				STA	TEXTBUF
				LDA	TEXTBUF+3
				STA	TEXTBUF+1
				JSR	CNVERT
				CPX	#$FF
				BNE	GOOD2
				PLA
FORGET			JMP	REKEY1
GOOD2			PHA
				JSR	ONEDATA
				LDY	CURSOR
				LDA	CURCOR1,Y
				TAX
				INX
				PLA
				STA	BUFF64,X
				DEX
				PLA
				STA	BUFF64,X
				JMP	COMN12
GOOD1			JSR	ONEDATA
				JSR	TVDRAW
				LDY	CURSOR
				LDA	CURCOR1,Y
				TAX
				PLA
				STA	BUFF64,X
				JSR	TVDRAW
COMN12			JSR	ONEDATA
				JMP	REKEY1

GREATER			LDA	#$32
				STA	TEXTBUF
				LDA	#$8D
				STA	TEXTBUF+1
				LDY	CURSOR
				LDA	TABLE8,Y
				TAY
				LDA	XSPOT	
				JMP	LINE

PRECON			LDY	MAXTEXT
				DEY
PRELOOP			LDA	TEXTBUF,Y
				CMP	#$8D
				BEQ	PRESKIP
				JSR	CONVERT
				TXA
PRESKIP			STA	TEXTBUF,Y
				DEY
				BPL	PRELOOP
				RTS

CNVERT			LDA	TEXTBUF
				JSR	DIGITS
				ASL
				ASL
				ASL
				ASL
				STA	SCRATCH
				LDA	TEXTBUF+1
				JSR	DIGITS
				ORA	SCRATCH
				LDX	#$00
				RTS

DIGITS			CMP	#$8D
				BEQ	BADIGIT
				CMP	#$0A	
				BEQ	BADIGIT	
				BCC	NUMDIG	
				CMP	#$11
				BCS	BADIGIT
				SEC	
				SBC	#$01	
NUMDIG			RTS
BADIGIT			PLA
				PLA
				LDX	#$FF
				RTS

NAMESUB			LDX	#$0F	
NAMLOOP			LDA	BUFF64,X
				STA	TEXTBUF,X
				DEX
				BPL	NAMLOOP
				LDA	#$8D
				STA	TEXTBUF+16	
				LDA	#$96
				LDY	#$08
				JMP	LINE

ALLDATA			JSR	NAMESUB
				LDA	#$02	
				STA	CURSOR
ALLOOP			JSR	ONEDATA
				INC	CURSOR
				LDA	CURSOR
				CMP	#$17	
				BNE	ALLOOP
				JMP	TVDRAW

SHOWNUM			LDX	#$00
				LDA	NUMBER			
				JSR	BYTESUB
				LDA	#$8D
				STA	TEXTBUF,X
				LDA	#$0C
				LDY	#$08
				JMP	LINE

ONEDATA			LDY	CURSOR
				LDA	CURCOR1,Y
				STA	COUNT
				LDA	CURCOR1+1,Y
				STA	SCRATCH
				LDX	#$00
ODLOOP1			LDY	COUNT
				LDA	BUFF64,Y
				JSR	BYTESUB
				INC	COUNT
				LDA	COUNT
				CMP	SCRATCH
				BEQ	ODSKIP1
				CMP	#$1C	
				BEQ	ODLOOP1
				LDA	#$0A
				STA	TEXTBUF,X
				INX
				BNE	ODLOOP1
ODSKIP1			LDA	#$8D
				STA	TEXTBUF,X
				LDY	CURSOR
				LDA	TABLE8,Y
				TAY
				LDA	#$96
				JMP	LINE

BYTESUB			PHA
				LSR
				LSR
				LSR
				LSR
				JSR	BYTE1
				STA	TEXTBUF,X
				INX
				PLA
				AND	#$0F
				JSR	BYTE1
				STA	TEXTBUF,X
				INX
				RTS
BYTE1			CMP	#$0A
				BCC	BYTEOUT
				CLC
				ADC	#$01
BYTEOUT			RTS

ARESURE			JSR	CDRAW1
				LDY	#$07
				JSR	TEXTER
				BIT	UNSTROB
AREKEY			LDA	KEYBRD
				BPL	AREKEY
				BIT	UNSTROB
				CMP	#"N"
				BEQ	NOKEY
				CMP	#"Y"
				BNE	AREKEY
				LDY	#$07
				JSR	TEXTER
				LDX	#$00
				RTS
NOKEY			LDY	#$07
				JSR	TEXTER
				JSR	CDRAW1
				LDX	#$FF
				RTS

*===============================
*
*===============================

GROUPING		JSR	CLEAR2
				STA	SCNDARY
				JSR	CDRAW1
				LDA	#$40
				STA	PAGE
				LDY	#$12
				JSR	TEXTER
				LDA	CURSOR
				STA	CHOLD1
				LDA	#$00
				STA	COUNTER
GROLOOP			JSR	DRAWBYTE
				INC	COUNTER
				LDA	COUNTER
				CMP	#$13
				BNE	GROLOOP
				LDA	#$00
				STA	CURSOR
				JSR	CDRAW2
GETBLINK		LDA	#$10
				JSR	WAIT
				LDA	#$F0
				JSR	WAIT2
				BMI	KEYHIT2
				JSR	CDRAW2
				LDA	#$00
				JSR	WAIT2
				JSR	CDRAW2
GETAKEY2		LDA	KEYBRD
				BPL	GETBLINK
KEYHIT2			BIT	UNSTROB
				JSR	CHECK_LEFT
				BEQ	GOLEFT
				JSR	CHECK_RIGHT
				BEQ	GORIGHT
				CMP	#" "
				BEQ	ENTERIT
				CMP	#"L"
				BNE	GETAKEY2
				LDA	CHOLD1
				STA	CURSOR
				LDA	#$20
				STA	PAGE
				STA	PRIMARY
				JMP	SCREEN1
GOLEFT			JSR	CDRAW2
				DEC	CURSOR
				BPL	GOL1
				LDA	#$12
				STA	CURSOR
GOL1			JSR	CDRAW2
				JMP	GETAKEY2
GORIGHT			JSR	CDRAW2
				INC	CURSOR
				LDA	CURSOR
				CMP	#$13
				BNE	GOR1
				LDA	#$00
				STA	CURSOR
GOR1			JSR	CDRAW2
				JMP	GETAKEY2

ENTERIT			LDA	#$02
				STA	MAXTEXT
				LDX	CURSOR
				LDA	XCOORDS,X
				LDY	#$40
				CPX	#$0A
				BCC	GOINPUT
				LDY	#$5C
GOINPUT			JSR	INPUT
				JSR	PRECON
				LDX	CURSOR
				LDA	XCOORDS,X
				LDY	#$40
				CPX	#$0A
				BCC	GOLINED
				LDY	#$5C
GOLINED			JSR	LINE
				JSR	CNVERT
				INX
				BEQ	NOWAY
				PHA
				LDA	CURSOR
				JSR	DRAWBYTE
				LDX	CURSOR
				PLA
				STA	BUFF64+45,X
				TXA
				JSR	DRAWBYTE
				JMP	GORIGHT
NOWAY			JMP	GETAKEY2

DRAWBYTE		TAX
				LDA	XCOORDS,X
				PHA
				LDA	BUFF64+45,X
				STX	SCRATCH
				LDX	#$00
				JSR	BYTESUB
				LDX	SCRATCH
				LDA	#$8D
				STA	TEXTBUF+2
				PLA
				LDY	#$48
				CPX	#$0A
				BCC	GOLINE
				LDY	#$64
GOLINE			JMP	LINE

XCOORDS			DB	$3F,$4E,$5D
				DB	$6C,$7B,$8A
				DB	$99,$A8,$B7
				DB	$C6
				DB	$3F,$4E,$5D
				DB	$6C,$7B,$8A
				DB	$99,$A8,$B7

*===============================
*
*===============================

WORDER			JSR	CLEAR2
				JSR	CDRAW1
				LDA	#$40
				STA	PAGE
				LDY	#$13
				JSR	TEXTER
				STA	SCNDARY
				LDA	#$00
				STA	MINCURS
				LDA	#$20
				STA	PAGE
				JSR	ONEDATA
				LDA	CURSOR
				STA	CHOLD1
				LDA	#$40
				STA	PAGE
				JSR	ALLWORDS
				JSR	ALLSUSEP
				LDA	CHOLD3
				BPL	WORDPART
				JMP	SUSEPART

WORDPART		STA	CURSOR
				LDA	#$14
				STA	MAXCURS
				LDA	#$3F
				STA	XPNT
				JSR	CDRAW1
REKEY3			JSR	KEYSUB1
KEYGAN3			CMP	#"L"
				BEQ	BACK3
				CMP	#" "
				BEQ	ENTER3
				JSR	CHECK_LEFT
				BEQ	RIGHT3
				JSR	CHECK_RIGHT
				BEQ	RIGHT3
				JSR	GETAKEY1
				JMP	KEYGAN3

BACK3			JSR	CDRAW1
				LDA	CURSOR
				STA	CHOLD3
				LDA	CHOLD1
				STA	CURSOR
				LDA	#$20
				STA	PAGE
				JSR	ONEDATA
				STA	PRIMARY
				JMP	SCREEN1

RIGHT3			JSR	CDRAW1
				LDA	#$80
				JMP	SUSEPART

ENTER3			JSR	WORDS
				JSR	WORDCALC
				LDA	BUFF64+34,X
				EOR	MASK8,Y
				STA	BUFF64+34,X
				JSR	WORDS
				JMP	REKEY3

ALLWORDS		LDA	#$00
				STA	CURSOR
ALLOOPW			JSR	WORDS
				LDA	CURSOR
				INC	CURSOR
				CMP	#$14
				BNE	ALLOOPW
				RTS

MASK8			DB	%10000000
				DB	%01000000
				DB	%00100000
				DB	%00010000
				DB	%00001000
				DB	%00000100
				DB	%00000010
				DB	%00000001

WORDS			JSR	WORDCALC
				LDA	MASK8,Y
				LDY	#$18
				AND	BUFF64+34,X
				BEQ	WNO
				INY
WNO				LDX	CURSOR
				LDA	TABLE8,X
				STA	TEXT18+2
				STA	TEXT19+2
				JMP	TEXTER

WORDCALC		LDA	CURSOR
				LSR
				LSR
				LSR
				TAX
				LDA	CURSOR
				AND	#%00000111
				TAY
				RTS

SUSEPART		AND	#$7F
				STA	CURSOR
				LDA	#$08
				STA	MAXCURS
				LDA	#$E1
				STA	XPNT
				JSR	CDRAW1
REKEY4			JSR	KEYSUB1
KEYGAN4			CMP	#"L"
				BEQ	BACK4
				CMP	#" "
				BEQ	ENTER4
				JSR	CHECK_LEFT
				BEQ	LEFT4
				JSR	CHECK_RIGHT
				BEQ	LEFT4
				JSR	GETAKEY1
				JMP	KEYGAN4

BACK4			JSR	CDRAW1
				LDA	CURSOR
				ORA	#$80
				STA	CHOLD3
				LDA	CHOLD1
				STA	CURSOR
				LDA	#$20
				STA	PAGE
				JSR	ONEDATA
				STA	PRIMARY
				JMP	SCREEN1

LEFT4			JSR	CDRAW1
				LDA	#$00
				JMP	WORDPART

ENTER4			JSR	SUSEPT
				JSR	SUSCALC
				LDA	BUFF64+34,X
				AND	MASK4,Y
				STA	SCRATCH
				LDA	MASK4,Y
				AND	#$55
				CLC
				ADC	SCRATCH
				AND	MASK4,Y
				STA	SCRATCH
				LDA	MASK4,Y
				EOR	#$FF
				AND	BUFF64+34,X
				ORA	SCRATCH
				STA	BUFF64+34,X
				JSR	SUSEPT
				JMP	REKEY4

ALLSUSEP		LDA	#$00
				STA	CURSOR
:LOOP1			JSR	SUSEPT
				LDA	CURSOR
				INC	CURSOR
				CMP	#$08
				BNE	:LOOP1
				RTS

MASK4			DB	%11000000
				DB	%00110000
				DB	%00001100
				DB	%00000011

SUSEPT			JSR	SUSCALC
				LDA	BUFF64+34,X
				AND	MASK4,Y
				PHA
				LDA	SHIFTS2,Y
				TAX
				PLA
:LOOP1			DEX
				BMI	:SKIPA
				LSR
				BPL	:LOOP1			;Always
:SKIPA			CLC
				ADC	#$14
				TAY
				LDX	CURSOR
				LDA	TABLE8,X
				STA	TEXT14+2
				STA	TEXT15+2
				STA	TEXT16+2
				STA	TEXT17+2
				JMP	TEXTER

SUSCALC			LDA	CURSOR
				LSR
				LSR
				TAX
				LDA	CURSOR
				AND	#%00000011
				TAY
				RTS

SHIFTS2			DB	6,4,2,0

*===============================
*
*===============================

SCREEN2			JSR	CLEAR2
				JSR	CDRAW1
				LDA	#$40
				STA	PAGE
				LDY	#$04	
				JSR	TEXTER
				LDA	#GREEN
				STA	COLOR
				LDY	#$00
				JSR	LINER
				JSR	SHOWNUM
				STA	SCNDARY
				LDA	#$01	
				STA	MINCURS
				LDA	#$17
				STA	MAXCURS
				LDA	#$20
				STA	PAGE
				JSR	ONEDATA
				LDA	CURSOR
				STA	CHOLD1
				LDA	#$40
				STA	PAGE
				LDY	#$01
				JSR	TEXTER
				LDA	#VIOLET
				STA	COLOR
				LDY	#$02
				JSR	LINER
				JSR	ALLYENO
				LDA	#$F9
				STA	XPNT
				LDA	CHOLD2
				STA	CURSOR
				JSR	CDRAW1
REKEY2			JSR	KEYSUB1
KEYGAN			CMP	#"L"
				BEQ	BACK2
				CMP	#" "
				BEQ	ENTER2
GOREKEY			JSR	GETAKEY1
				JMP	KEYGAN
BACK2			JSR	CDRAW1
				LDA	CURSOR
				STA	CHOLD2
				LDA	CHOLD1
				STA	CURSOR
				LDA	#$20
				STA	PAGE
				JSR	ONEDATA
				STA	PRIMARY
				JMP	SCREEN1
ENTER2			LDX	#$00
				LDY	CURSOR	
				CPY	#$0E
				BEQ	WIERD2	
				INX
				CPY	#$12
				BEQ	WIERD2	
				INX
				CPY	#$13
				BEQ	TEMP2A
				CPY	#$17
				BEQ	WIERD2	
				INX
				CPY	#$01
				BEQ	WIERD2
				INX
				CPY	#$14
				BEQ	WIERD2
				JSR	ONEYENO
				LDY	CURSOR
				JSR	CALCSUB
				LDA	BUFF64,X
				EOR	MASKS,Y
				STA	BUFF64,X
				JSR	ONEYENO
TEMP2A			JMP	REKEY2
WIERD2			TXA
				PHA
				JSR	ONEYENO
				LDY	CURSOR
				JSR	CALCSUB
				PLA
				STA	SCRATCH
				LDA	BUFF64,X
				LDX	SCRATCH
				PHA
				AND	BLOCKS,X
				CLC
				ADC	ADDS,X
				AND	BLOCKS,X
				TAY
				LDA	BLOCKS,X
				EOR	#$FF
				STA	SCRATCH
				PLA
				AND	SCRATCH
				STA	SCRATCH
				TYA
				ORA	SCRATCH
				PHA
				LDY	CURSOR
				JSR	CALCSUB
				PLA
				STA	BUFF64,X
				JSR	ONEYENO
				JMP	REKEY2
ALLYENO			LDA	#$01	
				STA	CURSOR
ALLOOP2			JSR	ONEYENO
				LDA	CURSOR
				INC	CURSOR
				CMP	#$17
				BNE	ALLOOP2
				RTS
ONEYENO			LDX	#$00
				LDY	CURSOR
				CPY	#$0E
				BEQ	WIERD1	
				INX
				CPY	#$12
				BEQ	WIERD1	
				INX
				CPY	#$13
				BEQ	TEMP2B
				CPY	#$17
				BEQ	WIERD1	
				INX
				CPY	#$01
				BEQ	WIERD3
				INX
				CPY	#$14
				BEQ	WIERD1	
				LDA	TABLE8,Y
				STA	TEXT9+2
				STA	TEXTA+2
				JSR	CALCSUB
				LDA	MASKS,Y
				LDY	#$09	
				AND	BUFF64,X
				BNE	ISYES
				INY
ISYES			JMP	TEXTER
TEMP2B			RTS

WIERD3			LDA	BUFF64+39	
				ROL
				ROL
				ROL
				AND	#$03
				TAY
				LDA	TDATAS+9,Y
				TAY
				LDX	CURSOR
				LDA	TABLE8,X
				STA	TEXTC+2
				STA	TEXTD+2
				STA	TEXTF+2
				STA	TEXT10+2
				JMP	TEXTER
WIERD1			STX	SCRATCH
				JSR	VALUSUB
				LDY	SCRATCH
				CLC
				ADC	TEXOFFS,Y
				TAY
				JMP	TEXTSUB

TEXOFFS			DB	$0F,$10,$0B
				DB	$14,$0F

VALUSUB			LDY	CURSOR
				JSR	CALCSUB
				LDA	BUFF64,X
				LDX	SCRATCH
				AND	BLOCKS,X	
				PHA
				LDA	SHIFTS,X
				TAY
				PLA
VALOOP1			DEY
				BMI	VALOUT
				LSR
				JMP	VALOOP1
VALOUT			RTS

BLOCKS			DB	$03,$18,$03
				DB	$C0,$C0
SHIFTS			DB	$00,$03,$00
				DB	$06,$06
ADDS			DB	$01,$08,$01
				DB	$40,$40

TEXTSUB			LDA	TDATAS-11,Y
				BMI	TSPECS
				STA	TEXTBUF
				LDA	#$8D
				STA	TEXTBUF+1
				LDA	#$25
				STA	XCOORD
				LDA	#$02
				STA	SHIFT
				LDY	CURSOR
				LDA	TABLE8,Y
				STA	YCOORD
				JMP	LINE2
TSPECS			LDX	CURSOR
				LDA	TABLE8,X
				STA	TEXTB+2
				STA	TEXTE+2
				JMP	TEXTER

TDATAS			DB	$FF,$01,$02
				DB	$FF,$00,$01
				DB	$02,$03,$04
				DB	$0C,$0D,$0F
				DB	$10

CALCSUB			LDA	CURCOR2,Y
				PHA
				LSR
				LSR
				LSR
				LSR
				CLC
				ADC	#$27
				TAX
				PLA
				AND	#$0F
				TAY
				RTS

KEYSUB1			LDA	#$10
				JSR	WAIT
				LDA	#$F0
				JSR	WAIT2
				BMI	KEYHIT1
				JSR	CDRAW1
				LDA	#$00
				JSR	WAIT2
				JSR	CDRAW1
GETAKEY1		LDA	KEYBRD
				BPL	KEYSUB1
KEYHIT1			BIT	UNSTROB
				JSR	CHECK_UP
				BEQ	UP1
				JSR	CHECK_DOWN
				BEQ	DOWN1
				JSR	CHECK_LEFT
				BEQ	OUT1
				JSR	CHECK_RIGHT
				BEQ	OUT1
				LDX	#6
KEYLOOP			CMP	LETTERS,X
				BEQ	OUT1
				DEX
				BPL	KEYLOOP
				BMI	GETAKEY1		;Always
OUT1			RTS

LETTERS			ASC	" SGLERT"

UP1				JSR	CDRAW1
				LDA	CURSOR
				DEC	CURSOR
				CMP	MINCURS
				BNE	UP2
				LDA	MAXCURS
				STA	CURSOR
UP2				JSR	CDRAW1
				JMP	GETAKEY1

DOWN1			JSR	CDRAW1
				LDA	CURSOR
				INC	CURSOR
				CMP	MAXCURS
				BNE	DOWN2
				LDA	MINCURS	
				STA	CURSOR
DOWN2			JSR	CDRAW1
				JMP	GETAKEY1

GRID_DRAW		LDA	#$59
				STA	COUNTY
				LDA	#WHITE1
				STA	COLOR
VLOOP			LDA	#$C8
				STA	COUNTX
HLOOP			LDA	COUNTY
				LDX	COUNTX
				LDY	#$00
				CPX	#$80
				BCS	GODOT
				INY
GODOT			JSR	HPLOT
				LDA	COUNTX
				CLC
				ADC	#$0F
				STA	COUNTX
				CMP	#$22
				BNE	HLOOP
				LDA	COUNTY
				CLC
				ADC	#$0B
				STA	COUNTY
				CMP	#$9B
				BNE	VLOOP
				RTS

TVDRAW			LDA	#$C9
				STA	XPNT
				LDA	#$5A
				STA	YPNT
				LDA	DATPNTL
				CLC
				ADC	#$48
				STA	MODPNT+1
				LDA	DATPNTH
				ADC	#$00
				STA	MODPNT+2
				LDA	BUFF64+$2B		;USE A LABEL
				BNE	:SKIPA
				LDA	#$11
:SKIPA			STA	COUNTER
				PHA
				LDA	BUFF64+$2C		;USE A LABEL
				PHA
				AND	#$0F
				CLC
				ADC	YPNT
				STA	YPNT
				PLA
				LSR
				LSR
				LSR
				LSR
				CLC
				ADC	XPNT
				STA	XPNT
				PHA
				LDX	#$00
				STX	POINTL
CLOOPY2			LDY	#$00
CLOOPX2			LDX	POINTL
MODPNT			LDA	$FFFF,X			;Modified
				BPL	INCX
				AND	#$7F
				CPY	#$06
				BNE	NOINCX
INCX			INC	POINTL
NOINCX			STA	CHARTAB,Y
				INY
				CPY	#$07
				BNE	CLOOPX2
				LDA	YPNT
				STA	YCOORD
				LDA	XPNT
				STA	XCOORD
				JSR	TABLER
				JSR	SHFTCLC
				JSR	CHAROUT
				LDA	COUNTER
				SEC
				SBC	#$10
				STA	COUNTER
				AND	#$F0
				BEQ	ROWED
				LDA	XPNT
				CLC
				ADC	#$07
				STA	XPNT
				BNE	CLOOPY2
ROWED			PLA
				TAX
				STX	XPNT
				LDA	YPNT
				CLC
				ADC	#$07
				STA	YPNT
				PLA
				SEC
				SBC	#$01
				STA	COUNTER
				AND	#$0F
				BEQ	CHOUT
				LDA	COUNTER
				PHA
				TXA
				PHA
				JMP	CLOOPY2
CHOUT			LDA	#$8D
				STA	XPNT
				RTS

CDRAW2			LDY	CURSOR
				LDA	#$51
				CPY	#$0A
				BCC	CSKIP2
				LDA	#$6D
CSKIP2			STA	YPNT
				LDA	XPNT
				PHA
				LDA	XCOORDS,Y
				CLC
				ADC	#$02
				STA	XPNT
				LDX	#<:CURSOR
				LDY	#>:CURSOR
				LDA	#0
				JSR	DRAW_SHAPES
				PLA
				STA	XPNT
				RTS

:CURSOR			DB	%00001000
				DB	%00011100
				DB	%00111110
				DB	%01111111
				DB	%01111111
				DB	%01111111
				DB	%01111111

CDRAW1			LDY	CURSOR	
				LDA	TABLE8,Y
				STA	YPNT
				LDA	#2
				JMP	SPCHARS

*-------------------------------

TO_BUFFER		JSR	TO_FROM_SUB
				LDY	#0
:LOOP1			LDA	(DATPNTL),Y
				STA	BUFF16,Y
				CMP	#$FF
				BEQ	:SKIPA
				INY
				BNE	:LOOP1			;Always
:SKIPA			JSR	PNTODAT
				LDY	#71
:LOOP2			LDA	(DATPNTL),Y
				STA	BUFF64,Y
				DEY
				BPL	:LOOP2
				RTS

FROM_BUFFER		JSR	TO_FROM_SUB
				LDY	#0
:LOOP1			LDA	BUFF16,Y
				STA	(DATPNTL),Y
				CMP	#$FF
				BEQ	:SKIPA
				INY
				BNE	:LOOP1			;Always
:SKIPA			JSR	PNTODAT
				LDY	#71
:LOOP2			LDA	BUFF64,Y
				STA	(DATPNTL),Y
				DEY
				BPL	:LOOP2
				RTS

TO_FROM_SUB		LDA	MAIN_BUFFER+3
				STA	DATPNTL
				LDA	MAIN_BUFFER+4
				CLC
				ADC	#>MAIN_BUFFER
				STA	DATPNTH
				LDX	NUMBER
				LDY	#0
				BEQ	:SKIPB			;Always
:LOOP1			INY
				BNE	:SKIPA
				INC	DATPNTH
:SKIPA			LDA	(DATPNTL),Y
				CMP	#$FF
				BNE	:LOOP1
				INY
				BNE	:SKIPB
				INC	DATPNTH
:SKIPB			DEX
				BNE	:LOOP1
				TYA
				CLC
				ADC	DATPNTL
				STA	DATPNTL
				BCC	:EXIT
				INC	DATPNTH
:EXIT			RTS

*-------------------------------

PNTODAT			LDA	MAIN_BUFFER+1
				STA	DATPNTL
				LDA	#>MAIN_BUFFER
				CLC
				ADC	MAIN_BUFFER+2
				STA	DATPNTH
				LDY	NUMBER
				DEY
				TYA
				ASL
				TAY
				LDA	(DATPNTL),Y
				PHA
				INY
				LDA	(DATPNTL),Y
				CLC
				ADC	#>MAIN_BUFFER
				LDY	SHELL_NUMBER
				SEC
				SBC	DOFF_SECTL-1,Y
				STA	DATPNTH
				PLA
				STA	DATPNTL
				RTS

DOFF_SECTL		DB	S_DATA17-S_DATA12
				DB	S_DATA15-S_DATA12
				DB	S_DATA13-S_DATA12
				DB	S_DATA11-S_DATA12
				DB	S_DATA9-S_DATA12

*-------------------------------

LOADSUB			JSR	LOAD_SAVE
				JSR	SLOAD
				LDX	MAIN_BUFFER
				STX	MAXNUMB
				RTS

*-------------------------------

SAVESUB			JSR	LOAD_SAVE
				JMP	DO_WRITE

*-------------------------------

LOAD_SAVE		LDA	#>MAIN_BUFFER
				STA	SSTOREH
				LDY	SHELL_NUMBER
				LDX	DATA_SECTL-1,Y
				LDA	DATA_SECTH-1,Y
				TAY
				LDA	#$20
				RTS

DATA_SECTL		DB	<S_DATA17
				DB	<S_DATA15
				DB	<S_DATA13
				DB	<S_DATA11
				DB	<S_DATA9

DATA_SECTH		DB	>S_DATA17
				DB	>S_DATA15
				DB	>S_DATA13
				DB	>S_DATA11
				DB	>S_DATA9

*-------------------------------

CURCOR1			DB	$FF
				DB	$00,$10,$11
				DB	$12,$13,$14
				DB	$15,$16,$17
				DB	$18,$19,$1A
				DB	$1B,$1D,$1E
				DB	$1F,$20,$21
				DB	$22,$27,$2B
				DB	$2C,$2D

CURCOR2			DB	$00,$01,$02
				DB	$03,$04,$05
				DB	$06,$07,$10
				DB	$11,$12,$13
				DB	$14,$15,$16
				DB	$20,$21,$22
				DB	$23,$25,$30
				DB	$32,$34,$36

MASKS			DB	%10000000
				DB	%01000000
				DB	%00100000
				DB	%00010000
				DB	%00001000
				DB	%00000100
				DB	%00000010
				DB	%00000001

TABLE8			DB	$00
				DB	$08,$10,$18
				DB	$20,$28,$30
				DB	$38,$40,$48
				DB	$50,$58,$60
				DB	$68,$70,$78
				DB	$80,$88,$90
				DB	$98,$A0,$A8
				DB	$B0,$B8

*-------------------------------

EXITLOAD
*** RESTORE DISK SIDE
*** RELOAD THALL AND SUBROUTINES
				JSR	HGR
				JSR	NOSCAN
				JMP	RDKEY

*-------------------------------

BUFF64			DS	64				;Main data
BUFF8			DS	8				;Experience/credit

BUFF16			DS	16				;Separate data
				DS	10				;Just in case more room is needed

SHELL_NUMBER	DB	0

				PUT	EDITOR.DATA

				DS	\,$EE
				PUT	NDOS.WRITE
				SAV	ALIEN.EDITOR
