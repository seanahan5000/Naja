LINENUM			=	$0C
HOLDSEC			=	ZBLOCK_A8+5
SECOUNT			=	ZBLOCK_A8+6
XHOLD			=	ZBLOCK_A8+7

CHARBUF			=	$4000

				LDA	#$00
				STA	INMEMRY
				STA	RUINED_FLAG
				LDY	#$01
				JSR	TEXTER
				LDY	#$00
				JSR	TEXTER
				JSR	SPWAIT
				LDY	#$01
				JSR	TEXTER
				JSR	CLRBOX
ANYONE			LDA	#$02
				STA	CURSOR
ANYONEX			LDY	#$02
				JSR	TEXTER
				JSR	SETTOFF
				LDA	#$00
				STA	LEGALS+2
				LDA	GRPNUMB
				BEQ	NOTEST
				LDA	#$00
				STA	LEGALS
NOTEST			LDX	#$00
FNDOPEN			LDA	OPENBUF,X
				CMP	#$FF
				BNE	GOTOPEN
				INX
				CPX	#$0B
				BNE	FNDOPEN
				BEQ	NOOPEN
GOTOPEN			STX	HOLDSEC
				STA	FSFLAG
				LDA	#$00
				STA	LEGALS+1
NOOPEN			LDA	#$A4
				STA	LINTABL
				LDA	#$AD
				STA	LINTABL+1
				LDA	#$B6
				STA	LINTABL+2
				JSR	DOT
				LDA	#$61
				STA	XHOLD
				JSR	KDOWN2
				JSR	DOT
				LDX	CURSOR
				BEQ	CANTEST
				DEX
				BEQ	GOROLL
				JMP	ENEXIT

CANTEST			LDA	#$AA
				CMP	INMEMRY
				BEQ	:SKIPA
				STA	INMEMRY
				LDA	#$85
				STA	SSTOREH
				LDX	#<$0120
				LDY	#>$0120
				LDA	#$0C
				JSR	SLOAD
:SKIPA			JMP	TESTING

GOROLL			LDA	#$EE
				CMP	INMEMRY
				BEQ	ROLHERE
				STA	INMEMRY
				LDA	#$85
				STA	SSTOREH
				LDX	#<$0106
				LDY	#>$0106
				LDA	#$1A
				JSR	SLOAD
ROLHERE			JMP	ENROLL	

ENEXIT			BIT	RUINED_FLAG
				BPL	:SKIPA
				LDX	#mPictures
				JSR	SLOAD_FILE
:SKIPA			JSR	CLRBOX
				LDA	#WHITE1
				STA	COLOR
				LDA	#$06
				STA	XPOS
				LDA	#$05
				STA	YPOS
				LDA	#$F0
				STA	DIRECTN
				LDA	#$40
				STA	PAGE
				JSR	CLEAR2
				JSR	GETNSEW
				JSR	NOSCAN
				STA	SCNDARY
				JSR	MOVETO1
				STA	PRIMARY
				LDA	#$20
				STA	PAGE
				PLA
				PLA
				JMP	RDKEY

CLRBOX			LDX	#$8E	
MORELIN			LDA	LOBYTES,X	
				STA	SCREENL
				LDA	HIBYTES,X	
				ORA	#$20
				STA	SCREENH
				LDY	#$00
				LDA	#$02	
				STA	(SCREENL),Y
				INY
				LDA	#$00
MORLOOP			STA	(SCREENL),Y
				INY
				CPY	#$27
				BNE	MORLOOP	
				LDA	#$40	
				STA	(SCREENL),Y
				INX
				CPX	#$BF	
				BNE	MORELIN
				RTS

KBLINK			LDA	#$10
				JSR	WAIT
				LDA	#$F0
				JSR	WAIT2
				BMI	GOTKEY
				JSR	DOT
				JSR	ACURSIT2
				LDA	#$00
				JSR	WAIT2
				JSR	DOT
				JSR	ACURSIT2
KEYMOVE			BIT	KEYBRD
				BPL	KBLINK
GOTKEY			JSR	SPECKS
				LDA	KEYBRD
				BIT	UNSTROB
				JSR	CHECK_UP
				BEQ	KUP
				JSR	CHECK_DOWN
				BEQ	KDOWN
CANCER			CMP	#$00
				BEQ	KCANCEL
				JSR	CHECK_ENTER
				BNE	KEYMOVE
				LDX	#$00
				RTS
KUP				JSR	ACURSIT2
KUP2			DEC	CURSOR
				BPL	KUP3
				LDA	#$07
				STA	CURSOR
KUP3			LDY	CURSOR
				LDA	LEGALS,Y
				BNE	KUP2
				JSR	ACURSIT2
				JMP	KEYMOVE
KDOWN			JSR	ACURSIT2
KDOWN2			INC	CURSOR
				LDA	CURSOR
				CMP	#$08
				BNE	KDOWN3
				LDA	#$00
				STA	CURSOR
KDOWN3			LDY	CURSOR
				LDA	LEGALS,Y
				BNE	KDOWN2
				JSR	ACURSIT2
				JMP	KEYMOVE
KCANCEL			LDX	#$FF
				RTS

DOT				LDA	XHOLD
				PHA
				LDA	#$C1
				STA	XHOLD
				LDA	#$22
				STA	YPNT
				LDA	PAGE
				PHA
				LDA	#$20
				STA	PAGE
				LDA	#$01
				JSR	EN_SPCHARS
				PLA
				STA	PAGE
				PLA
				STA	XHOLD
				RTS

ACURSIT2		LDX	CURSOR
				LDY	LINTABL,X
				LDX	XHOLD
				JMP	ARROWER

EN_SPCHARS		TAX
				LDA	SPOFFS,X
				TAX
				LDY	#$00
MORSP			LDA	SPDATA,X
				STA	CHARTAB,Y
				INX
				INY
				CPY	#$07
				BNE	MORSP
STOPIT			LDA	YPNT
				STA	YCOORD
				LDA	XHOLD
				STA	XCOORD
				JSR	TABLER
				JSR	SHFTCLC
				JMP	CHAROUT

SPOFFS			DB	$00,$07,$0E
				DB	$15,$1C

SHAPES
SPDATA			DB	$00,$0C,$18
				DB	$7F,$18,$0C
				DB	$00
				DB	$0E,$1F,$1B		;(1) Used in here...
				DB	$1F,$0E,$00
				DB	$00
				DB	$0C,$0E,$0C
				DB	$00,$00,$00
				DB	$00

				DB	%00000000		;(3) Used in testing...
				DB	%00111110
				DB	%00111110
				DB	%00111110
				DB	%00111110
				DB	%00111110
				DB	%00000000

				DB	%00000000		;(4) Used in testing...
				DB	%00000011
				DB	%00000111
				DB	%00001111
				DB	%00011111
				DB	%00111111
				DB	%00000000

SETTOFF			LDX	#$07
				LDA	#$FF
SETLOOP			STA	LEGALS,X
				DEX
				BPL	SETLOOP
				RTS

LINTABL			DB	$00,$00,$00
				DB	$00,$00,$00
				DB	$00,$00

INMEMRY			DB	0
RUINED_FLAG		DB	0
FSFLAG			DB	0

NAME			DB	$00,$00,$00		;Used in enrollment
				DB	$00,$00,$00
				DB	$00,$00,$00
				DB	$00
PROFRAC			DB	$00
RACE			DB	$00
GENDER			DB	$00

SPWAIT			BIT	UNSTROB
SPLOOP			JSR	SWEEPUP
				JSR	SPECKS
				LDA	KEYBRD
				BPL	SPLOOP
				BIT	UNSTROB
				JSR	CHECK_ENTER
				BNE	SPLOOP
				RTS

SWEEPUP			LDA	#$45	
				STA	LINNUMO
LOOPO			LDX	#$00	
LOOP			LDY	LINNUMO	
				CPY	#$29	
				BCC	LINDONE	
				LDA	LOBYTES,Y	
				STA	SCREENL
				LDA	HIBYTES,Y
				ORA	#$20	
				STA	SCREENH
				LDY	#$1C	
AGAIN			LDA	#$80
				EOR	(SCREENL),Y	
				STA	(SCREENL),Y	
				CPY	#$1E	
				BEQ	LINDONE	
				INY	
				BNE	AGAIN	
LINDONE			LDA	LINNUMO	
				CMP	#$47	
				BEQ	OUT	
				INC	LINNUMO	
				INX	
				LDA	LINNUMO	
				CMP	#$29	
				BCC	LINDONE	
				CPX	#$03	
				BEQ	LINDONE	
				CPX	#$07	
				BEQ	OUT	
				BNE	LOOP	
OUT				LDA	LINNUMO	
				INX	
				INX
				INX
				INX
				SEC
				STX	DUMMY
				SBC	DUMMY	
				STA	LINNUMO	
				LDA	#$80	
				JSR	WAIT2
				LDA	LINNUMO
				CMP	#$21	
				BNE	LOOPO	
				LDA	#$45	
				STA	LINNUMO	
				LDA	#$00
				JMP	WAIT2

SPECKS			LDA	#$12	
				STA	LINENUM	
				JSR	RNDMIZE
				LDA	RANDOM1
				AND	#$03
				TAX
				LDA	TABLE,X	
				STA	BYTNUMS	
LOOPS1			LDX	LINENUM	
				LDA	LOBYTES,X	
				STA	SCREENL
				LDA	HIBYTES,X
				ORA	#$20
				STA	SCREENH
				LDX	#$0B	
LOOPS2			LDY	BYTNUMS	
				LDA	SPCKDAT,Y	
				PHA
				TXA
				TAY
				PLA
				CPX	#$0C
				BNE	STORE
				ORA	#$E0
STORE			STA	(SCREENL),Y	
				INC	BYTNUMS	
				CPX	#$0C	
				BEQ	NXTLINS	
				INX	
				BNE	LOOPS2	
NXTLINS			LDA	LINENUM
				CMP	#$19	
				BEQ	FROMS	
				INC	LINENUM
				BNE	LOOPS1	
FROMS			RTS

TABLE			DB	$00,$10,$20,$30
BYTNUMS			DB	$00
DUMMY			DB	$00
LINNUMO			DB	$00

TEXTER			TYA
				ASL
				TAY
				LDA	ADDTABL,Y
				STA	POINTL
				LDA	ADDTABL+1,Y
				STA	POINTH
				JMP	TEXTOUT

ADDTABL			DW	TEXT0
				DW	TEXT1
				DW	TEXT2
				DW	TEXT3
				DW	TEXT4
				DW	TEXT5
				DW	0
				DW	TEXT7
				DW	TEXT8
				DW	TEXT9
				DW	TEXTA
				DW	TEXTB
				DW	TEXTC
				DW	TEXTD

TEXT0			SETXY	21;145
				USR	(WELCOME,_I'M_THE_COMPUTERIZED_COUNCIL_OF)
				PLOTAT	6;154;(FIVE,_SET_UP_BY_THE_ORIGINAL_COUNCIL_TO_SERVE)
				PLOTAT	6;163;(IN_THEIR_PLACE_UNTIL_A_NEW_COUNCIL_IS_FORMED.)
				PLOTAT	21;172;(INFORMATION_OF_THE_DEMISE_OF_THE_COUNCIL)
				PLOTAT	12;181;(CAN_BE_FOUND_IN_YOUR_TACTICAL_FORCE_MANUAL.)+

TEXT1			PLOTAT	101;34;(<SPACE>)+

TEXT2			PLOTAT	6;143;(I_AM_HERE_TO_PROVIDE_TWO_SERVICES_FOR_CADETS)
				PLOTAT	45;152;(WHICH_OF_THESE_ARE_YOU_HERE_FOR?)
				PLOTAT	111;164;(TESTING)
				PLOTAT	111;173;(ENROLLMENT)
				PLOTAT	111;182;(LEAVE)+

SPCKDAT			DB	$C8,$82,$B2
				DB	$88,$D4,$82
				DB	$CA,$80,$80
				DB	$87,$A8,$81
				DB	$B2,$84,$90
				DB	$8B,$88,$89
				DB	$A4,$83,$8C
				DB	$85,$E0,$80
				DB	$AC,$8D,$B4
				DB	$82,$C4,$88
				DB	$D2,$83,$AA
				DB	$8C,$8C,$82
				DB	$D4,$85,$90
				DB	$80,$CC,$86
				DB	$8A,$85,$A0
				DB	$80,$D4,$89
				DB	$D2,$8C,$AC
				DB	$85,$E4,$82
				DB	$D0,$86,$96
				DB	$85,$F4,$88
				DB	$AC,$86,$90
				DB	$85
