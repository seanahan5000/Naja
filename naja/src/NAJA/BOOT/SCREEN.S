********************************
*
*  SCREEN
*  (SLOW BUT SELF CONTAINED)
*
********************************

FROML			EQU	$11
FROMH			EQU	$12
TOL				EQU	$13
TOH				EQU	$14
ENDPAGE			EQU	$15
PAGE			EQU	$E6				;#$20=PAGE 1, #$40=PAGE 2
GRAPHIC			EQU	$C050
NOTEXT			EQU	$C052	
PRIMARY			EQU	$C054
SCNDARY			EQU	$C055
HIRES			EQU	$C057
COLOR			EQU	$00				;BLACK=#$00 
				ORG	$0300

********************************
* This is what is expected during
*   the boot up procedure

				LDA	#$20
				STA	PAGE
				JSR	NOHGRC
				STA	PRIMARY
				STA	NOTEXT
				STA	HIRES
				STA	GRAPHIC
				RTS

********************************
* This is what it gets changed
*   to afterwards

				do	0
HGR				STA	PRIMARY			;DESIGNATE PRIMARY PAGE FOR DISPLAY 
				LDA	#$20
				STA	PAGE
				JMP	COMMON
HGR2			STA	SCNDARY			;DESIGNATE SECONDARY PAGE FOR DISPLAY
				LDA	#$40
				STA	PAGE
COMMON			STA	NOTEXT			;DISPLAY HIRES SCREEN 
				fin

********************************
* The rest stays the same

				STA	HIRES
				STA	GRAPHIC
NOHGRC			LDY	#$00			;CLEAR STORAGE INDEX 
				STY	NOCOLOR+1		;SET VALUE OF NOCOLOR+1,NOCOLOR+2 TO 
				LDA	PAGE			;BEGINNING OF DESIGNATED HIRES PAGE 
				STA	NOCOLOR+2	
				CLC
				ADC	#$20
				STA	ENDPAGE			;STORE PAGE + #$20 IN ENDPAGE
RECOLOR			LDA	#COLOR			;SET ACCUMULATOR TO BLACK
NOCOLOR			STA	$0000,Y			;ERASE ONE BYTE
				INY
				CPY	#$78			;HAVE 120 BYTES BEEN ERASED?
				BNE	NOCOLOR			;NO, THEN ERASE ANOTHER ONE
				CLC
				LDA	#$80			;ADD 128 TO NOCOLOR+1, NOCOLOR+2 
				ADC	NOCOLOR+1	
				STA	NOCOLOR+1	
				LDA	#$00
				ADC	NOCOLOR+2	
				STA	NOCOLOR+2	
				CMP	ENDPAGE			;HAS END OF HIRES PAGE BEEN REACHED?
				BCS	END				;YES, THEN END
				LDY	#$00			;CLEAR STORAGE INDEX
				JMP	RECOLOR			;ERASE 120 MORE BYTES
END				RTS	
MOVETO1			LDA	#$20
				STA	TOH
				LDA	#$40
				STA	FROMH
				JMP	START
MOVETO2			LDA	#$40
				STA	TOH
				LDA	#$20
				STA	FROMH
START			CLC
				ADC	#$1F	
				STA	ENDPAGE
				LDY	#$00
				STY	TOL
				STY	FROML
LOOP			LDA	(FROML),Y
				STA	(TOL),Y
				INY
				CPY	#$78
				BNE	LOOP
				LDA	#$80
				CLC
				ADC	TOL
				STA	TOL
				STA	FROML
				BCC	SKIP	
				INC	TOH
				LDA	FROMH
				INC	FROMH
				CMP	ENDPAGE
				BEQ	DONE	
SKIP			LDY	#$00
				JMP	LOOP
DONE			RTS
RNDMIZE			CLC
				LDX	#$03
				LDA	RANDOM1,X
				DEX
RND1			ADC	RANDOM1,X
				STA	RANDOM1,X
				DEX
				BPL	RND1
				LDX	#$04	
RND2			INC	RANDOM1,X
				BNE	EXIT
				DEX
				BPL	RND2
EXIT			RTS
RANDOM1			DFB	$A9,$C3,$92
				DFB	$E7,$0F
WAIT			SEC
WAITA			PHA
WAITB			SBC	#$01
				BNE	WAITB
				PLA
				SBC	#$01
				BNE	WAITA
				RTS

BREAK			LDA	#$EE
				HEX	2C				;SKIP 2 BYTES

COVER			LDA	#$A0

				LDY	#$2C
				LDX	#$00
:LOOP1			STA	$0400,X
:MOD1			STA	$3000,X
:MOD2			STA	$5C00,X
:MOD3			STA	$8800,X
				INX
				BNE	:LOOP1
				INC	:LOOP1+2
				INC	:MOD1+2
				INC	:MOD2+2
				INC	:MOD3+2
				DEY
				BNE	:LOOP1

				STA	H03F2+1
				STA	H03F2+2

				JMP	$C600

				NOP
				NOP
				NOP
				NOP

H03F0			DA	BREAK
H03F2			DA	COVER
				DFB	COVER/256!$A5
H03F5			JMP	H03F5			;NEVER HAPPENS (AMPERSAND)
H03F8			JMP	H03F8			;NEVER HAPPENS (CONTROL-Y)
H03FB			JMP	BREAK			;NON MASKABLE INTERUPT
				DFB	$03,$0C			;NEXT SECTOR/ADDRESS TO LOAD FOR BOOT
